, within = .(Hemifield)
, between = .(Group)
, perms = 1000
)
N2c_amp_perm
N2i_amp_perm <- ezPerm(data = dplyr::filter(N2_participant_level_long, Hemisphere == "Ipsilateral")
, dv = .(N2)
, wid = .(ID)
, within = .(Hemifield)
, between = .(Group)
, perms = 1000
)
N2i_amp_perm
ggplot(dplyr::filter(N2_participant_level_long, Hemisphere == "Contralateral"), aes(Group, CPPonset, colour = Hemifield))  +
geom_boxplot() + coord_flip() + theme_bw ()
ggplot(dplyr::filter(N2_participant_level_long, Hemisphere == "Contralateral"), aes(Group, N2, colour = Hemifield))  +
geom_boxplot() + coord_flip() + theme_bw ()
ggplot(dplyr::filter(N2_participant_level_long, Hemisphere == "Contralateral"), aes(Group, N2, colour = Hemifield))  +
geom_boxplot() + theme_bw ()
View(data_participant_level)
ggplot(dplyr::filter(N2_participant_level_long, Hemisphere == "Ipsilateral"), aes(Group, N2, colour = Hemifield))  +
geom_boxplot() + theme_bw ()
N2_boot<-ezBoot(data = dplyr::filter(N2_participant_level_long, Hemisphere == "Contralateral")
, dv = .(N2)
, wid = .(ID)
, within = .(Hemifield)
, between = .(Group)
, resample_within = FALSE
)
ezPlot2(N2_boot, x=Hemifield, col=Group)
View(data)
dplyr::glimpse(data)
location<-"Monash"
# location<-"DansLaptop"
if (location=="Monash") {
setwd(("C:/GitHub/big_dots/Analyses Scripts_R"))
} else if (location=="DansLaptop") {
setwd(("C:/Users/Dan/Documents/GitHub/big_dots/Analyses Scripts_R"))
} else setwd(("~"))
## Install relevant libraries
library(foreign)
library(car)
library(nlme)
library(ggplot2)
library(pastecs)
library(psych)
library(plyr)
library(multcomp)
library(reshape2)
library(compute.es)
library(ez)
library(lattice)
library(lme4)
library(png)
library(grid)
###### Import single trial data:
if (location=="Monash") {
data <- read.csv("C:/GitHub/big_dots/Analysis Scripts_Matlab/master_matrix_R_BigDots.csv", header=FALSE)
} else if (location=="DansLaptop") {
data <- read.csv("C:/Users/Dan/Documents/GitHub/big_dots/Analyses Scripts_Matlab/master_matrix_R_BigDots.csv", header=FALSE)
} else setwd(("~"))
## Install relevant libraries
library(foreign)
library(car)
library(nlme)
library(ggplot2)
library(pastecs)
library(psych)
library(plyr)
library(multcomp)
library(reshape2)
library(compute.es)
library(ez)
library(lattice)
library(lme4)
library(png)
library(grid)
if (location=="Monash") {
data <- read.csv("C:/GitHub/big_dots/Analysis Scripts_Matlab/master_matrix_R_BigDots.csv", header=FALSE)
} else if (location=="DansLaptop") {
data <- read.csv("C:/Users/Dan/Documents/GitHub/big_dots/Analyses Scripts_Matlab/master_matrix_R_BigDots.csv", header=FALSE)
} else setwd(("~"))
###### Import single trial data:
if (location=="Monash") {
data <- read.csv("C:/GitHub/big_dots/master_matrix_R_BigDots.csv", header=FALSE)
} else if (location=="DansLaptop") {
data <- read.csv("C:/Users/Dan/Documents/GitHub/big_dots/master_matrix_R_BigDots.csv", header=FALSE)
} else setwd(("~"))
if (location=="Monash") {
ID <- read.table("C:/GitHub/big_dots/ID_vector_BigDots.csv", quote="\"")
} else if (location=="DansLaptop") {
ID <- read.table("C:/Users/Dan/Documents/GitHub/big_dots/ID_vector_BigDots.csv", quote="\"")
} else setwd(("~"))
data$ID<-data[,1]
#Replace the participant numbers with IDs:
data[,1]<-ID[,1]
#Remove the seperate ID vector now it has been included into data dataframe
rm(ID)
drops <- c("ID")
data<-data[,!(names(data) %in% drops)]
View(data)
DAT1 <- read.csv("S:/R-MNHS-SPP/Bellgrove-data/4. Dan Newman/Participant Folders_new/DAT1genotypes_forR.csv", na.strings="")
View(DAT1)
summary(DAT1)
summary(DAT1$DAT1_3UTR_VNTRraw)
#Make the required columns into factors:
DAT1$DAT1_3UTR_VNTRraw <- factor(DAT1$DAT1_3UTR_VNTRraw)
DAT1$Site <- factor(DAT1$Site)
DAT1$DAT1_10_10_repeats  <- plyr::revalue(DAT1$DAT1_3UTR_VNTRraw ,
c("10 10"="Two",
"10 11"="One",
"7 10"="One",
"7 9"="Zero",
"8 11"="Zero",
"9 10"="One",
"9 9"="Zero"))
summary(DAT1$DAT1_10_10_repeats)
DAT1$DAT1_3UTR  <- plyr::revalue(DAT1$DAT1_3UTR_VNTRraw ,
c("10 10"="10_10_repeat",
"10 11"="non10_10_repeat",
"7 10"="non10_10_repeat",
"7 9"="non10_10_repeat",
"8 11"="non10_10_repeat",
"9 10"="non10_10_repeat",
"9 9"="non10_10_repeat"))
summary(DAT1$DAT1_3UTR)
DAT1$DAT1_int8  <- plyr::revalue(DAT1$DAT1_Int8_VNTRraw ,
c("6 6"="6_6_repeat",
"5 6"="non6_6_repeat",
"5 5"="non6_6_repeat"))
summary(DAT1$DAT1_int8)
###### Import data_ParticipantLevel:
View(DAT1)
DAT1 <- read_excel("DAT1genotypes_forR.xlsx")
DAT1 <- read_excel("DAT1genotypes_forR.xlsx")
####Which computer/directory is this being run on?
location<-"Monash"
# location<-"DansLaptop"
if (location=="Monash") {
setwd(("C:/GitHub/big_dots/Analyses Scripts_R"))
} else if (location=="DansLaptop") {
setwd(("C:/Users/Dan/Documents/GitHub/big_dots/Analyses Scripts_R"))
} else setwd(("~"))
####################################
#######  How to use ################
####################################
# 1) Install the packages and software specified below. (consider also updating all installed packages by chosing Update on the Packages tab)
# 2) Set the working directory (setwd) above, and directory where you have "data_ParticipantLevel", "master_matrix_R" and "ID_vector" saved
# 3) Hit Knit Word (or Knit HTML)! (Output can take while due to bootstrapping the robust effect size and calculating the Bayesian Highest Density Iinterval)
####################################
######  FIRST TIME ONLY ############
####################################
#Remove # in front of the line below and run the code. Replace the # after installing the packages, otherwise the R markdown script will give errors.
# install.packages(c("MASS", "akima", "robustbase", "cobs", "robust", "mgcv", "scatterplot3d", "quantreg", "rrcov", "lars", "pwr", "trimcluster", "mc2d", "psych", "Rfit","MBESS", "BayesFactor", "PoweR", "ggplot2", "reshape2", "plyr", "devtools", "rmarkdown","gmodels", "HLMdiag", "car", "gridExtra", "bootES", "BEST","foreign","nlme","pastecs","multcomp","ggplot2","compute.es","ez","lattice","lme4","effects","diagram","png", "grid", "dplyr","readxl"))
#Installation of the robust statistics package: Remove # in front of each of 4 lines below and run the code. Replace the # after installing the packages, otherwise the R markdown script will give errors.
# install.packages("devtools")
# library("devtools")
# install_github("mrxiaohe/WRScpp")
# install_github("nicebread/WRS", subdir="pkg")
#Download and install JAGS to calculate Bayesian HDI: http://sourceforge.net/projects/mcmc-jags/
###################################################################################################################################
## Install relevant libraries
library(foreign)
library(car)
library(nlme)
library(ggplot2)
library(pastecs)
library(psych)
library(plyr)
library(multcomp)
library(reshape2)
library(compute.es)
library(ez)
library(lattice)
library(lme4)
library(png)
library(grid)
library(readxl)
###### Import single trial data:
if (location=="Monash") {
data <- read.csv("C:/GitHub/big_dots/master_matrix_R_BigDots.csv", header=FALSE)
} else if (location=="DansLaptop") {
data <- read.csv("C:/Users/Dan/Documents/GitHub/big_dots/master_matrix_R_BigDots.csv", header=FALSE)
} else setwd(("~"))
#Import IDs:
if (location=="Monash") {
ID <- read.table("C:/GitHub/big_dots/ID_vector_BigDots.csv", quote="\"")
} else if (location=="DansLaptop") {
ID <- read.table("C:/Users/Dan/Documents/GitHub/big_dots/ID_vector_BigDots.csv", quote="\"")
} else setwd(("~"))
data$ID<-data[,1]
#Replace the participant numbers with IDs:
data[,1]<-ID[,1]
#Remove the seperate ID vector now it has been included into data dataframe
rm(ID)
drops <- c("ID")
data<-data[,!(names(data) %in% drops)]
DAT1 <- read_excel("DAT1genotypes_forR.xlsx")
View(DAT1)
summary(DAT1)
#Rename data columns:
data<-rename(data, c("V1"="ID","V2"="TotalTrialNumber","V3"="Trial","V4"="ITI","V5"="Hemifield", "V6"="Accuracy",
"V7"="Art_neg500_0", "V8"="Art_neg100_100PR","V9"="Art_neg500_100PR", "V10"="Art_neg100_1000",
"V11"="FixBreak_neg500_0", "V12"="FixBreak_neg100_100PR","V13"="FixBreak_neg500_100PR", "V14"="FixBreak_neg100_1000",
"V15"="RT"))
View(data)
#Make the required columns into factors:
data$ITI <- factor(data$ITI)
data$Hemifield <- factor(data$Hemifield)
data$Accuracy <- factor(data$Accuracy)
#Rename factor Levels:
data$Hemifield <- revalue(data$Hemifield, c("1"="Left", "2"="Right"))
data$Accuracy <- revalue(data$Accuracy, c("1"="Hit", "0"="Miss"))
data$Accuracy <- revalue(data$Accuracy, c("1"="Hit", "0"="Miss", "2"="WrongButton"))
DAT1 <- read_excel("DAT1genotypes_forR.xlsx")
summary(DAT1)
summary(DAT1$DAT1_3UTR_VNTRraw)
#Make the required columns into factors:
DAT1$DAT1_3UTR_VNTRraw <- factor(DAT1$DAT1_3UTR_VNTRraw)
DAT1$Site <- factor(DAT1$Site)
DAT1$DAT1_10_10_repeats  <- plyr::revalue(DAT1$DAT1_3UTR_VNTRraw ,
c("10 10"="Two",
"10 11"="One",
"7 10"="One",
"7 9"="Zero",
"8 11"="Zero",
"9 10"="One",
"9 9"="Zero"))
summary(DAT1$DAT1_10_10_repeats)
DAT1$DAT1_3UTR  <- plyr::revalue(DAT1$DAT1_3UTR_VNTRraw ,
c("10 10"="10_10_repeat",
"10 11"="non10_10_repeat",
"7 10"="non10_10_repeat",
"7 9"="non10_10_repeat",
"8 11"="non10_10_repeat",
"9 10"="non10_10_repeat",
"9 9"="non10_10_repeat"))
summary(DAT1$DAT1_3UTR)
DAT1$DAT1_int8  <- plyr::revalue(DAT1$DAT1_Int8_VNTRraw ,
c("6 6"="6_6_repeat",
"5 6"="non6_6_repeat",
"5 5"="non6_6_repeat"))
summary(DAT1$DAT1_int8)
#### Merge the data sets together
data<-merge(DAT1, RT_index, c("ID"))
View(DAT1)
data<-merge(DAT1, data, c("ID"))
View(data)
####Which computer/directory is this being run on?
location<-"Monash"
# location<-"DansLaptop"
if (location=="Monash") {
setwd(("C:/GitHub/big_dots/Analyses Scripts_R"))
} else if (location=="DansLaptop") {
setwd(("C:/Users/Dan/Documents/GitHub/big_dots/Analyses Scripts_R"))
} else setwd(("~"))
####################################
#######  How to use ################
####################################
# 1) Install the packages and software specified below. (consider also updating all installed packages by chosing Update on the Packages tab)
# 2) Set the working directory (setwd) above, and directory where you have "data_ParticipantLevel", "master_matrix_R" and "ID_vector" saved
# 3) Hit Knit Word (or Knit HTML)! (Output can take while due to bootstrapping the robust effect size and calculating the Bayesian Highest Density Iinterval)
####################################
######  FIRST TIME ONLY ############
####################################
#Remove # in front of the line below and run the code. Replace the # after installing the packages, otherwise the R markdown script will give errors.
# install.packages(c("MASS", "akima", "robustbase", "cobs", "robust", "mgcv", "scatterplot3d", "quantreg", "rrcov", "lars", "pwr", "trimcluster", "mc2d", "psych", "Rfit","MBESS", "BayesFactor", "PoweR", "ggplot2", "reshape2", "plyr", "devtools", "rmarkdown","gmodels", "HLMdiag", "car", "gridExtra", "bootES", "BEST","foreign","nlme","pastecs","multcomp","ggplot2","compute.es","ez","lattice","lme4","effects","diagram","png", "grid", "dplyr","readxl"))
#Installation of the robust statistics package: Remove # in front of each of 4 lines below and run the code. Replace the # after installing the packages, otherwise the R markdown script will give errors.
# install.packages("devtools")
# library("devtools")
# install_github("mrxiaohe/WRScpp")
# install_github("nicebread/WRS", subdir="pkg")
#Download and install JAGS to calculate Bayesian HDI: http://sourceforge.net/projects/mcmc-jags/
###################################################################################################################################
## Install relevant libraries
library(foreign)
library(car)
library(nlme)
library(ggplot2)
library(pastecs)
library(psych)
library(plyr)
library(multcomp)
library(reshape2)
library(compute.es)
library(ez)
library(lattice)
library(lme4)
library(png)
library(grid)
library(readxl)
###### Import single trial data:
if (location=="Monash") {
data <- read.csv("C:/GitHub/big_dots/master_matrix_R_BigDots.csv", header=FALSE)
} else if (location=="DansLaptop") {
data <- read.csv("C:/Users/Dan/Documents/GitHub/big_dots/master_matrix_R_BigDots.csv", header=FALSE)
} else setwd(("~"))
#Import IDs:
if (location=="Monash") {
ID <- read.table("C:/GitHub/big_dots/ID_vector_BigDots.csv", quote="\"")
} else if (location=="DansLaptop") {
ID <- read.table("C:/Users/Dan/Documents/GitHub/big_dots/ID_vector_BigDots.csv", quote="\"")
} else setwd(("~"))
data$ID<-data[,1]
#Replace the participant numbers with IDs:
data[,1]<-ID[,1]
#Remove the seperate ID vector now it has been included into data dataframe
rm(ID)
drops <- c("ID")
data<-data[,!(names(data) %in% drops)]
#########################################################################################################################
#data_ParticipantLevel:
# ###### Import data_ParticipantLevel:
# if (location=="Monash") {
# data_participant_level <- read.csv("C:/GitHub/big_dots/participant_level_matrix.csv", header=FALSE)
# } else if (location=="DansLaptop") {
# data_participant_level <- read.csv("C:/Users/Dan/Documents/GitHub/big_dots/participant_level_matrix.csv", header=FALSE)
# } else setwd(("~"))
#
#
# #Import IDs:
# if (location=="Monash") {
# ID <- read.table("S:/R-MNHS-SPP/Bellgrove-data/11.Megan_ONeill/Analysis Scripts_Matlab/IDs.csv", quote="\"")
# } else if (location=="DansLaptop") {
# ID <- read.csv("C:/Users/Dan/Documents/GitHub/OldervsYounger/Analyses Scripts_Matlab/IDs.csv", header=F)
# } else setwd(("~"))
# ID<-plyr::rename(ID,c("V1"="ID"))
# data_participant_level$ID<-ID$ID
# rm(ID)
# # drops <- c("ID")
# # data_participant_level<-data_participant_level[,!(names(data_participant_level) %in% drops)]
#
# #import demographic data
# if (location=="Monash") {
# Demographics<-read.csv("S:/R-MNHS-SPP/Bellgrove-data/11.Megan_ONeill/Analysis Scripts_R/Older_Younger_Demographics_etc.csv", header=T)
# } else if (location=="DansLaptop") {
# Demographics<-read.csv("C:/Users/Dan/Documents/GitHub/OldervsYounger/Analyses Scripts_R/Older_Younger_Demographics_etc.csv", header=T)
# } else setwd(("~"))
#
#
#
# #Merge Demographics into data_participant_level:
# data_participant_level <- merge(data_participant_level, Demographics, by.x = "ID", by.y = "ID")
# rm(Demographics)
#########################################################################################################################
#Rename data columns:
data<-rename(data, c("V1"="ID","V2"="TotalTrialNumber","V3"="Trial","V4"="ITI","V5"="Hemifield", "V6"="Accuracy",
"V7"="Art_neg500_0", "V8"="Art_neg100_100PR","V9"="Art_neg500_100PR", "V10"="Art_neg100_1000",
"V11"="FixBreak_neg500_0", "V12"="FixBreak_neg100_100PR","V13"="FixBreak_neg500_100PR", "V14"="FixBreak_neg100_1000",
"V15"="RT"))
#NOTE: FOR N2c/i,  the _GA or _PA suffix indicates whether N2c/i is measured with a measurement window based
#on Grand average (GA) peak N2c/i latency,  or based on Participant level average (PA) peak N2c/i latency
#Make the required columns into factors:
data$ITI <- factor(data$ITI)
data$Hemifield <- factor(data$Hemifield)
data$Accuracy <- factor(data$Accuracy)
#Rename factor Levels:
data$Hemifield <- revalue(data$Hemifield, c("1"="Left", "2"="Right"))
data$Accuracy <- revalue(data$Accuracy, c("1"="Hit", "0"="Miss", "2"="WrongButton"))
#Re-class required vectors into Logicals:
data$Art_neg500_0<-as.logical(data$Art_neg500_0)
data$Art_neg100_100PR<-as.logical(data$Art_neg100_100PR)
data$FixationBreak<-as.logical(data$FixationBreak)
data$RejectedTrial<-as.logical(data$RejectedTrial)
############################################ Import DAT1 Data ##############################################
DAT1 <- read_excel("DAT1genotypes_forR.xlsx")
summary(DAT1)
summary(DAT1$DAT1_3UTR_VNTRraw)
#Make the required columns into factors:
DAT1$DAT1_3UTR_VNTRraw <- factor(DAT1$DAT1_3UTR_VNTRraw)
DAT1$Site <- factor(DAT1$Site)
DAT1$DAT1_10_10_repeats  <- plyr::revalue(DAT1$DAT1_3UTR_VNTRraw ,
c("10 10"="Two",
"10 11"="One",
"7 10"="One",
"7 9"="Zero",
"8 11"="Zero",
"9 10"="One",
"9 9"="Zero"))
summary(DAT1$DAT1_10_10_repeats)
DAT1$DAT1_3UTR  <- plyr::revalue(DAT1$DAT1_3UTR_VNTRraw ,
c("10 10"="10_10_repeat",
"10 11"="non10_10_repeat",
"7 10"="non10_10_repeat",
"7 9"="non10_10_repeat",
"8 11"="non10_10_repeat",
"9 10"="non10_10_repeat",
"9 9"="non10_10_repeat"))
summary(DAT1$DAT1_3UTR)
DAT1$DAT1_int8  <- plyr::revalue(DAT1$DAT1_Int8_VNTRraw ,
c("6 6"="6_6_repeat",
"5 6"="non6_6_repeat",
"5 5"="non6_6_repeat"))
summary(DAT1$DAT1_int8)
data<-merge(data, DAT1, c("ID"))
View(data)
location<-"Monash"
# location<-"DansLaptop"
if (location=="Monash") {
setwd(("C:/GitHub/big_dots/Analyses Scripts_R"))
} else if (location=="DansLaptop") {
setwd(("C:/Users/Dan/Documents/GitHub/big_dots/Analyses Scripts_R"))
} else setwd(("~"))
####################################
#######  How to use ################
####################################
# 1) Install the packages and software specified below. (consider also updating all installed packages by chosing Update on the Packages tab)
# 2) Set the working directory (setwd) above, and directory where you have "data_ParticipantLevel", "master_matrix_R" and "ID_vector" saved
# 3) Hit Knit Word (or Knit HTML)! (Output can take while due to bootstrapping the robust effect size and calculating the Bayesian Highest Density Iinterval)
####################################
######  FIRST TIME ONLY ############
####################################
#Remove # in front of the line below and run the code. Replace the # after installing the packages, otherwise the R markdown script will give errors.
# install.packages(c("MASS", "akima", "robustbase", "cobs", "robust", "mgcv", "scatterplot3d", "quantreg", "rrcov", "lars", "pwr", "trimcluster", "mc2d", "psych", "Rfit","MBESS", "BayesFactor", "PoweR", "ggplot2", "reshape2", "plyr", "devtools", "rmarkdown","gmodels", "HLMdiag", "car", "gridExtra", "bootES", "BEST","foreign","nlme","pastecs","multcomp","ggplot2","compute.es","ez","lattice","lme4","effects","diagram","png", "grid", "dplyr","readxl"))
#Installation of the robust statistics package: Remove # in front of each of 4 lines below and run the code. Replace the # after installing the packages, otherwise the R markdown script will give errors.
# install.packages("devtools")
# library("devtools")
# install_github("mrxiaohe/WRScpp")
# install_github("nicebread/WRS", subdir="pkg")
#Download and install JAGS to calculate Bayesian HDI: http://sourceforge.net/projects/mcmc-jags/
###################################################################################################################################
## Install relevant libraries
library(foreign)
library(car)
library(nlme)
library(ggplot2)
library(pastecs)
library(psych)
library(plyr)
library(multcomp)
library(reshape2)
library(compute.es)
library(ez)
library(lattice)
library(lme4)
library(png)
library(grid)
library(readxl)
###### Import single trial data:
if (location=="Monash") {
data <- read.csv("C:/GitHub/big_dots/master_matrix_R_BigDots.csv", header=FALSE)
} else if (location=="DansLaptop") {
data <- read.csv("C:/Users/Dan/Documents/GitHub/big_dots/master_matrix_R_BigDots.csv", header=FALSE)
} else setwd(("~"))
#Import IDs:
if (location=="Monash") {
ID <- read.table("C:/GitHub/big_dots/ID_vector_BigDots.csv", quote="\"")
} else if (location=="DansLaptop") {
ID <- read.table("C:/Users/Dan/Documents/GitHub/big_dots/ID_vector_BigDots.csv", quote="\"")
} else setwd(("~"))
data$ID<-data[,1]
#Replace the participant numbers with IDs:
data[,1]<-ID[,1]
#Remove the seperate ID vector now it has been included into data dataframe
rm(ID)
drops <- c("ID")
data<-data[,!(names(data) %in% drops)]
#########################################################################################################################
#data_ParticipantLevel:
# ###### Import data_ParticipantLevel:
# if (location=="Monash") {
# data_participant_level <- read.csv("C:/GitHub/big_dots/participant_level_matrix.csv", header=FALSE)
# } else if (location=="DansLaptop") {
# data_participant_level <- read.csv("C:/Users/Dan/Documents/GitHub/big_dots/participant_level_matrix.csv", header=FALSE)
# } else setwd(("~"))
#
#
# #Import IDs:
# if (location=="Monash") {
# ID <- read.table("S:/R-MNHS-SPP/Bellgrove-data/11.Megan_ONeill/Analysis Scripts_Matlab/IDs.csv", quote="\"")
# } else if (location=="DansLaptop") {
# ID <- read.csv("C:/Users/Dan/Documents/GitHub/OldervsYounger/Analyses Scripts_Matlab/IDs.csv", header=F)
# } else setwd(("~"))
# ID<-plyr::rename(ID,c("V1"="ID"))
# data_participant_level$ID<-ID$ID
# rm(ID)
# # drops <- c("ID")
# # data_participant_level<-data_participant_level[,!(names(data_participant_level) %in% drops)]
#
# #import demographic data
# if (location=="Monash") {
# Demographics<-read.csv("S:/R-MNHS-SPP/Bellgrove-data/11.Megan_ONeill/Analysis Scripts_R/Older_Younger_Demographics_etc.csv", header=T)
# } else if (location=="DansLaptop") {
# Demographics<-read.csv("C:/Users/Dan/Documents/GitHub/OldervsYounger/Analyses Scripts_R/Older_Younger_Demographics_etc.csv", header=T)
# } else setwd(("~"))
#
#
#
# #Merge Demographics into data_participant_level:
# data_participant_level <- merge(data_participant_level, Demographics, by.x = "ID", by.y = "ID")
# rm(Demographics)
#########################################################################################################################
#Rename data columns:
data<-rename(data, c("V1"="ID","V2"="TotalTrialNumber","V3"="Trial","V4"="ITI","V5"="Hemifield", "V6"="Accuracy",
"V7"="Art_neg500_0", "V8"="Art_neg100_100PR","V9"="Art_neg500_100PR", "V10"="Art_neg100_1000",
"V11"="FixBreak_neg500_0", "V12"="FixBreak_neg100_100PR","V13"="FixBreak_neg500_100PR", "V14"="FixBreak_neg100_1000",
"V15"="RT"))
View(data)
#Make the required columns into factors:
data$ITI <- factor(data$ITI)
data$Hemifield <- factor(data$Hemifield)
data$Accuracy <- factor(data$Accuracy)
#Rename factor Levels:
data$Hemifield <- revalue(data$Hemifield, c("1"="Left", "2"="Right"))
data$Accuracy <- revalue(data$Accuracy, c("1"="Hit", "0"="Miss", "2"="WrongButton"))
summary(data$Accuracy)
data[data$Accuracy=="Miss" & data$RT==0]
data[data$Accuracy=="Miss" & data$RT==0,]
test<-data[data$Accuracy=="Hit" & data$RT==0,]
test
data[data$Accuracy=="Hit" & data$RT==0,]
View(DAT1)
