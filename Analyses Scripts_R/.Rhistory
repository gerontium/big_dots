# data <- merge(data, Accuracy_checker, by.x = "ID", by.y = "ID")
#
# ###Incorporate the demographic variables from data_participant_level into the single trial 'data' dataframe
# target<-dplyr::select(data_participant_level, ID, Gender, Age,  Years_of_Education, Greyscale_correct, Greyscales_L_chosen, Bells_Cancellation, CoC_Index, Extinction,          Landmark_Spatial_Index)
#
# data<-merge(data, target, by.x="ID", by.y = "ID")
# rm(target)
#Calculate the number of trials each participant has left after fixation break trials are kicked out:
num_trials2 <- ddply(data, c("ID"), summarise,
Num_RT_Trials    = length(RT))
num_trials2 <- ddply(data2, c("ID"), summarise,
Num_RT_Trials    = length(RT))
summary(num_trials2)
#So get participant level RT into long format so I can run permutated t-tests
RT_collapsed<-ddply(data2, .(ID, Hemifield, DAT1_3UTR), summarise, RT=mean(RT))
#Plot RT by DAT1_3UTR and hemifield:
RT_collapsed$DAT1_3UTR_by_Hemifield<-interaction(RT_collapsed$Hemifield, RT_collapsed$DAT1_3UTR)
#non log transformed:
ggplot(RT_collapsed, aes(RT))  + geom_histogram() + facet_wrap(~ DAT1_3UTR_by_Hemifield)
#Try a density plot
ggplot(RT_collapsed, aes(RT, colour = DAT1_3UTR_by_Hemifield))  +
geom_density(alpha = 0.1)
data2<-data[complete.cases(data$DAT1_3UTR),]####### This kicks out 4 the participants for which we didn't have DAT1 genotpes
Accuracy_collapsed<-ddply(data2, .(ID, DAT1_3UTR), summarise, Accuracy=mean(Accuracy_overall))
###Check for Accuracy_overall outliers
min(Accuracy_collapsed$Accuracy)
#Plot the Accuracy distribution for each DAT1_3UTR
ggplot(Accuracy_collapsed, aes(Accuracy))  + geom_histogram() + facet_wrap(~ DAT1_3UTR)
num_trials2 <- ddply(data2, c("ID"), summarise,
Num_RT_Trials    = length(RT))
summary(num_trials2)
RT_collapsed<-ddply(data2, .(ID, Hemifield, DAT1_3UTR), summarise, RT=mean(RT))
#Plot RT by DAT1_3UTR and hemifield:
RT_collapsed$DAT1_3UTR_by_Hemifield<-interaction(RT_collapsed$Hemifield, RT_collapsed$DAT1_3UTR)
#non log transformed:
ggplot(RT_collapsed, aes(RT))  + geom_histogram() + facet_wrap(~ DAT1_3UTR_by_Hemifield)
#Try a density plot
ggplot(RT_collapsed, aes(RT, colour = DAT1_3UTR_by_Hemifield))  +
geom_density(alpha = 0.1)
ezANOVA(
data = RT_collapsed
, dv = .(RT)
, wid = .(ID)
, within = .(Hemifield)
, between = .(DAT1_3UTR)
, observed = .(DAT1_3UTR)
, type = 3
, detailed = F
)
ezANOVA(
data = RT_collapsed
, dv = .(RT)
, wid = .(ID)
, within = .(Hemifield)
, between = .(DAT1_3UTR)
, observed = .(DAT1_3UTR)
, type = 3
, detailed = T
)
##Try the old school
ezANOVA(
data = RT_collapsed
, dv = .(RT)
, wid = .(ID)
, within = .(Hemifield)
, between = .(DAT1_3UTR)
, observed = .(DAT1_3UTR)
, type = 3
, detailed = F
)
View(RT_collapsed)
? ezANOVA
View(data)
RT_collapsed<-ddply(data2, .(ID, Hemifield, DAT1_3UTR, Site), summarise, RT=mean(RT))
#So get participant level RT into long format so I can run permutated t-tests
RT_collapsed<-ddply(data2, .(ID, Hemifield, DAT1_3UTR, Site), summarise, RT=mean(RT))
#Plot RT by DAT1_3UTR and hemifield:
RT_collapsed$DAT1_3UTR_by_Hemifield<-interaction(RT_collapsed$Hemifield, RT_collapsed$DAT1_3UTR)
#non log transformed:
ggplot(RT_collapsed, aes(RT))  + geom_histogram() + facet_wrap(~ DAT1_3UTR_by_Hemifield)
#Try a density plot
ggplot(RT_collapsed, aes(RT, colour = DAT1_3UTR_by_Hemifield))  +
geom_density(alpha = 0.1)
##Try the old school
ezANOVA(
data = RT_collapsed
, dv = .(RT)
, wid = .(ID)
, within = .(Hemifield)
, between = .(DAT1_3UTR)
, observed = .(DAT1_3UTR)
, between_covariates = .(Site)
, type = 3
, detailed = F
)
ezANOVA(
data = RT_collapsed
, dv = .(RT)
, wid = .(ID)
, within = .(Hemifield)
, between = .(DAT1_3UTR)
, observed = .(DAT1_3UTR)
, between_covariates = .(Site)
, observed = .(Site)
, type = 3
, detailed = F
)
ezANOVA(
data = RT_collapsed
, dv = .(RT)
, wid = .(ID)
, within = .(Hemifield)
, between = .(DAT1_3UTR)
, observed = .(DAT1_3UTR)
, between_covariates = .(Site)
, type = 3
, detailed = F
)
RT_random_intercepts_only<-lmer(log(RT) ~ 1 + (Hemifield + Trial | ID) +(1|ITI) + (1|Trial), data = data2[Site=="Monash",], REML=FALSE, na.action = na.omit)
RT_DAT1_3UTR<-update(RT_random_intercepts_only, .~. + DAT1_3UTR)
RT_Hemifield<-update(RT_DAT1_3UTR, .~. + Hemifield)
RT_HemifieldbyDAT1_3UTR<-update(RT_Hemifield, .~. + Hemifield:DAT1_3UTR)
anova(RT_random_intercepts_only, RT_DAT1_3UTR, RT_Hemifield, RT_HemifieldbyDAT1_3UTR)
########################### Multi-level Models ##########################
RT_random_intercepts_only<-lmer(log(RT) ~ 1 + (Hemifield + Trial | ID) +(1|ITI) + (1|Trial), data = data2[Site="Monash",], REML=FALSE, na.action = na.omit)
RT_DAT1_3UTR<-update(RT_random_intercepts_only, .~. + DAT1_3UTR)
RT_Hemifield<-update(RT_DAT1_3UTR, .~. + Hemifield)
RT_HemifieldbyDAT1_3UTR<-update(RT_Hemifield, .~. + Hemifield:DAT1_3UTR)
anova(RT_random_intercepts_only, RT_DAT1_3UTR, RT_Hemifield, RT_HemifieldbyDAT1_3UTR)
data2[Site="Monash",]
data2[Site=="Monash",]
? dplyr::filter
dplyr::filter(data2, Site=="Monash")
dplyr::filter(data2, Site=="Monash")
dan<-dplyr::filter(data2, Site=="Monash")
RT_random_intercepts_only<-lmer(log(RT) ~ 1 + (Hemifield + Trial | ID) +(1|ITI) + (1|Trial), data = dplyr::filter(data2, Site=="Monash"), REML=FALSE, na.action = na.omit)
RT_DAT1_3UTR<-update(RT_random_intercepts_only, .~. + DAT1_3UTR)
RT_random_intercepts_only<-lmer(log(RT) ~ 1 + (Hemifield + Trial | ID) +(1|ITI) + (1|Trial), data = data2, REML=FALSE, na.action = na.omit)
RT_random_intercepts_only<-lmer(log(RT) ~ 1 + (Hemifield | ID) +(1|ITI) + (1|Trial), data = data2, REML=FALSE, na.action = na.omit)
Monash<-dplyr::filter(data2, Site=="Monash")
Trinity<-dplyr::filter(data2, Site=="Trinity")
RT_random_intercepts_only<-lmer(log(RT) ~ 1 + (Hemifield | ID) +(1|ITI) + (1|Trial), data = Monash, REML=FALSE, na.action = na.omit)
RT_DAT1_3UTR<-update(RT_random_intercepts_only, .~. + DAT1_3UTR)
RT_Hemifield<-update(RT_DAT1_3UTR, .~. + Hemifield)
RT_HemifieldbyDAT1_3UTR<-update(RT_Hemifield, .~. + Hemifield:DAT1_3UTR)
anova(RT_random_intercepts_only, RT_DAT1_3UTR, RT_Hemifield, RT_HemifieldbyDAT1_3UTR)
RT_random_intercepts_only<-lmer(log(RT) ~ 1 + (Hemifield | ID) +(1|ITI) + (1|Trial), data = Trinity, REML=FALSE, na.action = na.omit)
RT_DAT1_3UTR<-update(RT_random_intercepts_only, .~. + DAT1_3UTR)
RT_Hemifield<-update(RT_DAT1_3UTR, .~. + Hemifield)
RT_HemifieldbyDAT1_3UTR<-update(RT_Hemifield, .~. + Hemifield:DAT1_3UTR)
anova(RT_random_intercepts_only, RT_DAT1_3UTR, RT_Hemifield, RT_HemifieldbyDAT1_3UTR)
Monash<-dplyr::filter(data2, Site=="Monash")
Trinity<-dplyr::filter(data2, Site=="Trinity")
RT_random_intercepts_only<-lmer(log(RT) ~ 1 + (Hemifield | ID) +(1|ITI) + (1|Trial), data = Monash, REML=FALSE, na.action = na.omit)
RT_DAT1_3UTR<-update(RT_random_intercepts_only, .~. + DAT1_3UTR)
RT_Hemifield<-update(RT_DAT1_3UTR, .~. + Hemifield)
RT_HemifieldbyDAT1_3UTR<-update(RT_Hemifield, .~. + Hemifield:DAT1_3UTR)
anova(RT_random_intercepts_only, RT_DAT1_3UTR, RT_Hemifield, RT_HemifieldbyDAT1_3UTR)
, dv = .(RT_Asym)
RT_random_intercepts_only<-lmer(log(RT) ~ 1 + (Hemifield | ID) +(1|ITI) + (1|Trial), data = data2, REML=FALSE, na.action = na.omit)
RT_DAT1_3UTR<-update(RT_random_intercepts_only, .~. + DAT1_3UTR)
RT_Hemifield<-update(RT_DAT1_3UTR, .~. + Hemifield)
RT_HemifieldbyDAT1_3UTR<-update(RT_Hemifield, .~. + Hemifield:DAT1_3UTR)
anova(RT_random_intercepts_only, RT_DAT1_3UTR, RT_Hemifield, RT_HemifieldbyDAT1_3UTR)
#Calculate the number of trials each participant has left after NAs are kicked out:
num_trials2 <- ddply(data2, c("ID"), summarise,
Num_RT_Trials    = length(RT))
summary(num_trials2)
#So get participant level RT into long format so I can run permutated t-tests
RT_collapsed<-ddply(data2, .(ID, Hemifield, DAT1_3UTR, Site), summarise, RT=mean(RT))
#Plot RT by DAT1_3UTR and hemifield:
RT_collapsed$DAT1_3UTR_by_Hemifield<-interaction(RT_collapsed$Hemifield, RT_collapsed$DAT1_3UTR)
#non log transformed:
ggplot(RT_collapsed, aes(RT))  + geom_histogram() + facet_wrap(~ DAT1_3UTR_by_Hemifield)
#Try a density plot
ggplot(RT_collapsed, aes(RT, colour = DAT1_3UTR_by_Hemifield))  +
geom_density(alpha = 0.1)
Monash<-dplyr::filter(RT_collapsed, Site=="Monash")
Trinity<-dplyr::filter(RT_collapsed, Site=="Trinity")
ezANOVA(
data = Monash
, dv = .(RT)
, wid = .(ID)
, within = .(Hemifield)
, between = .(DAT1_3UTR)
, observed = .(DAT1_3UTR)
, between_covariates = .(Site)
, type = 3
, detailed = F
)
ezANOVA(
data = Monash
, dv = .(RT)
, wid = .(ID)
, within = .(Hemifield)
, between = .(DAT1_3UTR)
, observed = .(DAT1_3UTR)
, type = 3
, detailed = F
)
RT_collapsed$DAT1_3UTR_by_Hemifield<-interaction(RT_collapsed$Hemifield, RT_collapsed$DAT1_3UTR)
#non log transformed:
ggplot(RT_collapsed, aes(RT))  + geom_histogram() + facet_wrap(~ DAT1_3UTR_by_Hemifield)
#Try a density plot
RT_collapsed$DAT1_3UTR_by_Hemifield<-interaction(RT_collapsed$Hemifield, RT_collapsed$DAT1_3UTR)
#non log transformed:
ggplot(RT_collapsed, aes(RT))  + geom_histogram() + facet_wrap(~ DAT1_3UTR_by_Hemifield)
ggplot(RT_collapsed, aes(log(RT))  + geom_histogram() + facet_wrap(~ DAT1_3UTR_by_Hemifield)
)
ggplot(RT_collapsed, aes(RT))  + geom_histogram() + facet_wrap(~ DAT1_3UTR_by_Hemifield)
ggplot(RT_collapsed, aes(log(RT))  + geom_histogram() + facet_wrap(~ DAT1_3UTR_by_Hemifield)
#Try a density plot
ggplot(RT_collapsed, aes(RT, colour = DAT1_3UTR_by_Hemifield))  +
ggplot(RT_collapsed, aes(log(RT)))  + geom_histogram() + facet_wrap(~ DAT1_3UTR_by_Hemifield)
RT_collapsed$log_RT<-log(RT_collapsed$RT)
ezANOVA(
data = RT_collapsed
, dv = .(log_RT)
, wid = .(ID)
, within = .(Hemifield)
, between = .(DAT1_3UTR)
, observed = .(DAT1_3UTR)
, between_covariates = .(Site)
, type = 3
, detailed = F
)
ezANOVA(
data = RT_collapsed
, dv = .(RT)
, wid = .(ID)
, within = .(Hemifield)
, between = .(DAT1_3UTR)
, observed = .(DAT1_3UTR)
, between_covariates = .(Site)
, type = 3
, detailed = F
)
ezANOVA(
data = RT_collapsed
, dv = .(log_RT)
, wid = .(ID)
, within = .(Hemifield)
, between = .(DAT1_3UTR)
, observed = .(DAT1_3UTR)
, between_covariates = .(Site)
, type = 3
, detailed = F
)
##Look at Monash participants only
ezANOVA(
data = Monash
, dv = .(log_RT)
, wid = .(ID)
, within = .(Hemifield)
, between = .(DAT1_3UTR)
, observed = .(DAT1_3UTR)
, type = 3
, detailed = F
)
Monash<-dplyr::filter(RT_collapsed, Site=="Monash")
Trinity<-dplyr::filter(RT_collapsed, Site=="Trinity")
##Look at Monash participants only
ezANOVA(
data = Monash
, dv = .(log_RT)
, wid = .(ID)
, within = .(Hemifield)
, between = .(DAT1_3UTR)
, observed = .(DAT1_3UTR)
, type = 3
, detailed = F
)
##Look at Monash participants only
ezANOVA(
data = Trinity
, dv = .(log_RT)
, wid = .(ID)
, within = .(Hemifield)
, between = .(DAT1_3UTR)
, observed = .(DAT1_3UTR)
, type = 3
, detailed = F
)
source("summarySE.R")
source("summarySEwithin.R") #function to calculate Std.Er of mean
source("normDataWithin.R")
plotdata <- summarySEwithin(data, measurevar="RT", withinvars=c("Hemifield"), idvar="ID")
ggplot(plotdata, aes(x=Hemifield, y=RT, fill=Hemifield)) +
geom_bar(position=position_dodge(.9), colour="Black", stat="identity") +
geom_errorbar(position=position_dodge(.9), width=.3, aes(ymin=RT-ci, ymax=RT+ci)) + #can change "se" to "ci" if I want to use 95%ci instead
geom_hline(yintercept=0) +  coord_cartesian(ylim = c(400, 600)) +
xlab("Hemifield") + ylab("RT (ms)") +
theme(axis.title.x = element_text(face="bold", size=12),
axis.text.x  = element_text(face="bold", angle=0,  size=12)) +
theme(axis.title.y = element_text(face="bold", size=12),
axis.text.y  = element_text(angle=0, vjust=0.5, size=12)) +
theme(legend.title = element_text(size=11, face="bold")) +
theme(legend.text = element_text(size = 11, face = "bold")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) + facet_wrap(~ Site)
ggplot(data, aes(Hemifield, RT, colour = Hemifield))  +
geom_boxplot() + coord_flip() + theme_bw ()
ggplot(data, aes(Hemifield, RT, colour = Hemifield))  +
geom_boxplot() + coord_flip() + theme_bw () + facet_wrap(~ Site)
View(data)
# #Look at a boxplot of RT
ggplot(data, aes(Hemifield, RT, colour = Hemifield))  +
geom_boxplot() + coord_flip() + theme_bw () + facet_wrap(~ DAT1_10_10_repeats)
ggplot(data2, aes(Hemifield, RT, colour = Hemifield))  +
geom_boxplot() + coord_flip() + theme_bw () + facet_wrap(~ DAT1_10_10_repeats)
ggplot(data2, aes(Hemifield, RT, colour = Hemifield))  +
geom_violin() + coord_flip() + theme_bw () + facet_wrap(~ DAT1_10_10_repeats)
ggplot(data2, aes(Hemifield, RT, colour = Hemifield))  +
geom_violin() + coord_flip() + theme_bw () + facet_wrap(~ DAT1_10_10_repeats) +  geom_boxplot()
RT_random_intercepts_only<-lmer(log(RT) ~ 1 + (Hemifield | ID) +(1|ITI) + (1|Trial), data = data2, REML=FALSE, na.action = na.omit)
RT_DAT1_3UTR<-update(RT_random_intercepts_only, .~. + DAT1_10_10_repeats)
RT_Hemifield<-update(RT_DAT1_3UTR, .~. + Hemifield)
RT_HemifieldbyDAT1_3UTR<-update(RT_Hemifield, .~. + Hemifield:DAT1_10_10_repeats)
anova(RT_random_intercepts_only, RT_DAT1_3UTR, RT_Hemifield, RT_HemifieldbyDAT1_3UTR)
RT_random_intercepts_only<-lmer(log(RT) ~ 1 + (Hemifield | ID) +(1|ITI) + (1|Trial), data = data2, REML=FALSE, na.action = na.omit)
RT_DAT1_3UTR<-update(RT_random_intercepts_only, .~. + DAT1_3UTR)
RT_Hemifield<-update(RT_DAT1_3UTR, .~. + Hemifield)
RT_HemifieldbyDAT1_3UTR<-update(RT_Hemifield, .~. + Hemifield:DAT1_3UTR)
anova(RT_random_intercepts_only, RT_DAT1_3UTR, RT_Hemifield, RT_HemifieldbyDAT1_3UTR)
num_trials2 <- ddply(data2, c("ID"), summarise,
Num_RT_Trials    = length(RT))
summary(num_trials2)
#So get participant level RT into long format so I can run permutated t-tests
RT_collapsed<-ddply(data2, .(ID, Hemifield, DAT1_3UTR, Site, DAT1_10_10_repeats), summarise, RT=mean(RT))
#Plot RT by DAT1_3UTR and hemifield:
RT_collapsed$DAT1_3UTR_by_Hemifield<-interaction(RT_collapsed$Hemifield, RT_collapsed$DAT1_3UTR)
#non log transformed:
ggplot(RT_collapsed, aes(RT))  + geom_histogram() + facet_wrap(~ DAT1_3UTR_by_Hemifield)
ggplot(RT_collapsed, aes(log(RT)))  + geom_histogram() + facet_wrap(~ DAT1_3UTR_by_Hemifield)
RT_collapsed$log_RT<-log(RT_collapsed$RT)
#Try a density plot
ggplot(RT_collapsed, aes(RT, colour = DAT1_3UTR_by_Hemifield))  +
geom_density(alpha = 0.1)
ezANOVA(
data = RT_collapsed
, dv = .(log_RT)
, wid = .(ID)
, within = .(Hemifield)
, between = .(DAT1_10_10_repeats)
, observed = .(DAT1_10_10_repeats)
, between_covariates = .(Site)
, type = 3
, detailed = F
)
ezANOVA(
data = RT_collapsed
, dv = .(log_RT)
, wid = .(ID)
, within = .(Hemifield)
, between = .(DAT1_3UTR)
, observed = .(DAT1_3UTR)
, between_covariates = .(Site)
, type = 3
, detailed = F
)
log <- capture.output({
RT_Hemifield_by_DAT1_3UTR <- ezPerm(data = RT_collapsed
, dv = .(RT)
, wid = .(ID)
, within = .(Hemifield)
, between = .(DAT1_3UTR)
, perms = 1000
)})
print("Factorial Permutation test for Hemifield x DAT1 group interaction on RT:")
print(RT_Hemifield_by_DAT1_3UTR)
log <- capture.output({
RT_Hemifield_by_DAT1_3UTR <- ezPerm(data = RT_collapsed
, dv = .(RT)
, wid = .(ID)
, within = .(Hemifield)
, between = .(DAT1_10_10_repeats)
, perms = 1000
)})
print("Factorial Permutation test for Hemifield x DAT1 group interaction on RT:")
print(RT_Hemifield_by_DAT1_3UTR)
summary(data2$DAT1_10_10_repeats)
1369/260
152/2
summary(RT_collapsed$DAT1_10_10_repeats)
ezANOVA(
data = RT_collapsed
, dv = .(log_RT)
, wid = .(ID)
, within = .(Hemifield)
, between = .(DAT1_10_10_repeats)
, observed = .(DAT1_10_10_repeats)
, between_covariates = .(Site)
, type = 3
, detailed = F
)
Monash<-dplyr::filter(RT_collapsed, Site=="Monash")
Trinity<-dplyr::filter(RT_collapsed, Site=="Trinity")
ezANOVA(
data = Monash
, dv = .(log_RT)
, wid = .(ID)
, within = .(Hemifield)
, between = .(DAT1_3UTR)
, observed = .(DAT1_3UTR)
, between_covariates = .(Site)
, type = 3
, detailed = F
)
ezANOVA(
data = Monash
, dv = .(log_RT)
, wid = .(ID)
, within = .(Hemifield)
, between = .(DAT1_3UTR)
, observed = .(DAT1_3UTR)
, type = 3
, detailed = F
)
ezANOVA(
data = Trinity
, dv = .(log_RT)
, wid = .(ID)
, within = .(Hemifield)
, between = .(DAT1_3UTR)
, observed = .(DAT1_3UTR)
, type = 3
, detailed = F
)
RT_collapsed<-ddply(data2, .(ID, Hemifield, DAT1_3UTR, Site, DAT1_10_10_repeats), summarise, RT=mean(RT))
#Plot RT by DAT1_3UTR and hemifield:
RT_collapsed$DAT1_3UTR_by_Hemifield<-interaction(RT_collapsed$Hemifield, RT_collapsed$DAT1_3UTR)
#non log transformed:
ggplot(RT_collapsed, aes(RT))  + geom_histogram() + facet_wrap(~ DAT1_3UTR_by_Hemifield)
ggplot(RT_collapsed, aes(log(RT)))  + geom_histogram() + facet_wrap(~ DAT1_3UTR_by_Hemifield)
RT_collapsed$log_RT<-log(RT_collapsed$RT)
#Try a density plot
ggplot(RT_collapsed, aes(RT, colour = DAT1_3UTR_by_Hemifield))  +
geom_density(alpha = 0.1)
ggplot(data2, aes(Hemifield, RT, colour = Hemifield))  +
geom_violin() + coord_flip() + theme_bw () + facet_wrap(~ DAT1_10_10_repeats) +  geom_boxplot()
ggplot(RT_collapsed, aes(log(RT)))  + geom_histogram() + facet_wrap(~ DAT1_3UTR_by_Hemifield)
ggplot(RT_collapsed, aes(DAT1_3UTR_by_Hemifield, RT, colour = DAT1_3UTR_by_Hemifield))  +
geom_violin() + coord_flip() + theme_bw () +  geom_boxplot()
ggplot(RT_collapsed, aes(DAT1_3UTR_by_Hemifield, RT, colour = Hemifield))  +
geom_violin() + coord_flip() + theme_bw () +  geom_boxplot() + facet_wrap(~ DAT1_3UTR)
ggplot(RT_collapsed, aes(Hemifield, RT, colour = Hemifield))  +
geom_violin() + coord_flip() + theme_bw () +  geom_boxplot() + facet_wrap(~ DAT1_3UTR)
ggplot(RT_collapsed, aes(DAT1_3UTR_by_Hemifield, RT, colour = DAT1_3UTR_by_Hemifield))  +
geom_violin() + coord_flip() + theme_bw () +  geom_boxplot()
ggplot(RT_collapsed, aes(RT, colour = DAT1_3UTR_by_Hemifield))  +
geom_density(alpha = 0.1)
ggplot(RT_collapsed, aes(RT_Asym, colour = DAT1_3UTR))  +
geom_density(alpha = 0.1)
#Collapse each participant's trials accross ITI
RT_collapsed<-ddply(data2, .(ID, Hemifield, DAT1_3UTR), summarise, RT=mean(RT))
#Bring Target-Hemifield up into wide format
RT_collapsed <- dcast(RT_collapsed, ID  ~ Hemifield, value.var="RT", fun.aggregate=mean)
RT_collapsed<-rename(RT_collapsed, c("Left"="RT_Left", "Right"="RT_Right"))
#Calculate RT asymmetry
RT_collapsed$RT_Asym<-(RT_collapsed$RT_Left-RT_collapsed$RT_Right)/(RT_collapsed$RT_Left+RT_collapsed$RT_Right)
RT_collapsed<-merge(RT_collapsed, DAT1, by.x = "ID", by.y = "ID")
##################################################################################
ggplot(RT_collapsed, aes(RT_Asym))  + geom_histogram(aes(y=..count..), colour="black", fill="white") + facet_wrap(~ DAT1_3UTR)
#Try a density plot
ggplot(RT_collapsed, aes(RT_Asym, colour = DAT1_3UTR))  +
geom_density(alpha = 0.1)
# #Look at a boxplot of RT
ggplot(data2, aes(Hemifield, RT, colour = Hemifield))  +
geom_violin() + coord_flip() + theme_bw () + facet_wrap(~ DAT1_10_10_repeats) +  geom_boxplot()
ggplot(data2, aes(Hemifield, RT, colour = Hemifield))  +
geom_violin() + coord_flip() + theme_bw () +  geom_boxplot() + facet_wrap(~ DAT1_3UTR)
ggplot(data2, aes(Hemifield, RT, colour = Hemifield))  +
geom_violin() + coord_flip() + theme_bw () +  geom_boxplot() + facet_wrap(~ DAT1_3UTR, Site)
View(data2)
data2$Hemifield_by_DAT1_3UTR<-interaction(data2$Hemifield, data2$DAT1_3UTR)
data2$Hemifield_by_DAT1_3UTR<-interaction(data2$Hemifield, data2$DAT1_3UTR)
ggplot(data2, aes(Hemifield_by_DAT1_3UTR, RT, colour = Hemifield_by_DAT1_3UTR))  +
geom_violin() + coord_flip() + theme_bw () +  geom_boxplot() + facet_wrap(~ Site)
RT_random_intercepts_only<-lmer(log(RT) ~ 1 + (Hemifield | Site/ID) +(1|ITI) + (1|Trial), data = data2, REML=FALSE, na.action = na.omit)
RT_DAT1_3UTR<-update(RT_random_intercepts_only, .~. + DAT1_3UTR)
RT_random_intercepts_only<-lmer(log(RT) ~ 1 + (1 | Site/ID) +(1|ITI) + (1|Trial), data = data2, REML=FALSE, na.action = na.omit)
RT_DAT1_3UTR<-update(RT_random_intercepts_only, .~. + DAT1_3UTR)
RT_Hemifield<-update(RT_DAT1_3UTR, .~. + Hemifield)
RT_HemifieldbyDAT1_3UTR<-update(RT_Hemifield, .~. + Hemifield:DAT1_3UTR)
anova(RT_random_intercepts_only, RT_DAT1_3UTR, RT_Hemifield, RT_HemifieldbyDAT1_3UTR)
RT_random_intercepts_only<-lmer(log(RT) ~ 1 + (Hemifield | Site/ID) +(1|ITI) + (1|Trial), data = data2, REML=FALSE, na.action = na.omit)
RT_DAT1_3UTR<-update(RT_random_intercepts_only, .~. + DAT1_3UTR)
RT_Hemifield<-update(RT_DAT1_3UTR, .~. + Hemifield)
RT_HemifieldbyDAT1_3UTR<-update(RT_Hemifield, .~. + Hemifield:DAT1_3UTR)
anova(RT_random_intercepts_only, RT_DAT1_3UTR, RT_Hemifield, RT_HemifieldbyDAT1_3UTR)
RT_random_intercepts_only<-lmer(log(RT) ~ 1 + (1 | Site/DAT1_3UTR/ID) +(1|ITI) + (1|Trial), data = data2, REML=FALSE, na.action = na.omit)
RT_DAT1_3UTR<-update(RT_random_intercepts_only, .~. + DAT1_3UTR)
RT_Hemifield<-update(RT_DAT1_3UTR, .~. + Hemifield)
RT_HemifieldbyDAT1_3UTR<-update(RT_Hemifield, .~. + Hemifield:DAT1_3UTR)
anova(RT_random_intercepts_only, RT_DAT1_3UTR, RT_Hemifield, RT_HemifieldbyDAT1_3UTR)
summary(RT_HemifieldbyDAT1_3UTR)
RT_random_intercepts_only<-lmer(log(RT) ~ 1 + (1 | Site/DAT1_3UTR/ID) +(1|ITI) + (1|Trial), data = data2, REML=FALSE, na.action = na.omit)
RT_DAT1_3UTR<-update(RT_random_intercepts_only, .~. + DAT1_3UTR)
RT_Hemifield<-update(RT_DAT1_3UTR, .~. + Hemifield)
RT_Site<-update(RT_Hemifield, .~. + Site)
RT_HemifieldbyDAT1_3UTR<-update(RT_Site, .~. + Hemifield:DAT1_3UTR)
anova(RT_random_intercepts_only, RT_DAT1_3UTR, RT_Hemifield, RT_Site, RT_HemifieldbyDAT1_3UTR)
RT_random_intercepts_only<-lmer(log(RT) ~ 1 + (1 | Site/DAT1_3UTR/ID) +(1|ITI) + (1|Trial), data = data2, REML=FALSE, na.action = na.omit)
RT_DAT1_3UTR<-update(RT_random_intercepts_only, .~. + DAT1_3UTR)
RT_Hemifield<-update(RT_DAT1_3UTR, .~. + Hemifield)
RT_HemifieldbyDAT1_3UTR<-update(RT_Hemifield, .~. + Hemifield:DAT1_3UTR)
anova(RT_random_intercepts_only, RT_DAT1_3UTR, RT_Hemifield, RT_HemifieldbyDAT1_3UTR)
summary(glht(lmer(log(RT) ~ Hemifield + (Hemifield|ID)+(1|ITI) + (1|Hemifield)+ (1|Trial), data = data2[data2$DAT1_3UTR=="10_10_repeat",], REML=FALSE, na.action = na.omit)))
summary(glht(lmer(log(RT) ~ Hemifield + (Hemifield|ID)+(1|ITI) + (1|Hemifield)+ (1|Trial), data = data2[data2$DAT1_3UTR=="non10_10_repeat",], REML=FALSE, na.action = na.omit)))
summary(glht(lmer(log(RT) ~ Hemifield + (Hemifield|Site/DAT1_3UTR/ID)+(1|ITI) + (1|Hemifield)+ (1|Trial), data = data2[data2$DAT1_3UTR=="non10_10_repeat",], REML=FALSE, na.action = na.omit)))
summary(glht(lmer(log(RT) ~ Hemifield + (Hemifield|Site/ID)+(1|ITI) + (1|Hemifield)+ (1|Trial), data = data2[data2$DAT1_3UTR=="non10_10_repeat",], REML=FALSE, na.action = na.omit)))
summary(glht(lmer(log(RT) ~ Hemifield + (Hemifield|Site/ID)+(1|ITI) + (1|Hemifield)+ (1|Trial), data = data2[data2$DAT1_3UTR=="10_10_repeat",], REML=FALSE, na.action = na.omit)))
