source("multiplot.R")
multiplot(p_violin,p_CPP,Paradigm2,p_Beta,p_N2,p_Alpha,layout= matrix(c(1,2,2,3,3,5,5,1,2,2,4,4,6,6), nrow = 7, ncol = 2))
dev.off()
multiplot(p_violin,p_CPP,Paradigm2,p_Beta,p_N2,p_Alpha,layout= matrix(c(1,2,2,3,3,5,5,1,2,2,4,4,6,6), nrow = 7, ncol = 2))
Paradigm2<-ggplot(data_frame(y=c(1,459.5,919), x=c(1,492,984)), aes(x, y))  +
annotation_custom(Paradigm, xmin = 0, xmax = 980, ymin = 0, ymax = 919) +
theme(axis.title.x = element_blank(),
axis.text.x  = element_blank(),
axis.title.y = element_blank(),
axis.text.y  = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
panel.background = element_blank()) +
annotate("text", x = 100, y = 925, label = "[C]", size=6)
Paradigm2
png("Figure 2.png", width = 10*600, height = 15*600,  units = "px", res = 600)
source("multiplot.R")
multiplot(p_violin,p_CPP,Paradigm2,p_Beta,p_N2,p_Alpha,layout= matrix(c(1,2,2,3,3,5,5,1,2,2,4,4,6,6), nrow = 7, ncol = 2))
dev.off()
multiplot(p_violin,p_CPP,Paradigm2,p_Beta,p_N2,p_Alpha,layout= matrix(c(1,2,2,3,3,5,5,1,2,2,4,4,6,6), nrow = 7, ncol = 2))
Paradigm2<-ggplot(data_frame(y=c(1,459.5,919), x=c(1,492,984)), aes(x, y))  +
annotation_custom(Paradigm, xmin = 0, xmax = 980, ymin = 0, ymax = 915) +
theme(axis.title.x = element_blank(),
axis.text.x  = element_blank(),
axis.title.y = element_blank(),
axis.text.y  = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
panel.background = element_blank()) +
annotate("text", x = 100, y = 920, label = "[C]", size=6)
Paradigm2
png("Figure 2.png", width = 10*600, height = 15*600,  units = "px", res = 600)
source("multiplot.R")
multiplot(p_violin,p_CPP,Paradigm2,p_Beta,p_N2,p_Alpha,layout= matrix(c(1,2,2,3,3,5,5,1,2,2,4,4,6,6), nrow = 7, ncol = 2))
dev.off()
multiplot(p_violin,p_CPP,Paradigm2,p_Beta,p_N2,p_Alpha,layout= matrix(c(1,2,2,3,3,5,5,1,2,2,4,4,6,6), nrow = 7, ncol = 2))
Paradigm2<-ggplot(data_frame(y=c(1,459.5,919), x=c(1,492,984)), aes(x, y))  +
annotation_custom(Paradigm, xmin = 0, xmax = 980, ymin = 0, ymax = 912) +
theme(axis.title.x = element_blank(),
axis.text.x  = element_blank(),
axis.title.y = element_blank(),
axis.text.y  = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
panel.background = element_blank()) +
annotate("text", x = 100, y = 920, label = "[C]", size=6)
Paradigm2
png("Figure 2.png", width = 10*600, height = 15*600,  units = "px", res = 600)
source("multiplot.R")
multiplot(p_violin,p_CPP,Paradigm2,p_Beta,p_N2,p_Alpha,layout= matrix(c(1,2,2,3,3,5,5,1,2,2,4,4,6,6), nrow = 7, ncol = 2))
dev.off()
multiplot(p_violin,p_CPP,Paradigm2,p_Beta,p_N2,p_Alpha,layout= matrix(c(1,2,2,3,3,5,5,1,2,2,4,4,6,6), nrow = 7, ncol = 2))
Paradigm2<-ggplot(data_frame(y=c(1,459.5,919), x=c(1,492,984)), aes(x, y))  +
annotation_custom(Paradigm, xmin = 0, xmax = 980, ymin = -10, ymax = 912) +
theme(axis.title.x = element_blank(),
axis.text.x  = element_blank(),
axis.title.y = element_blank(),
axis.text.y  = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
panel.background = element_blank()) +
annotate("text", x = 100, y = 920, label = "[C]", size=6)
Paradigm2
png("Figure 2.png", width = 10*600, height = 15*600,  units = "px", res = 600)
source("multiplot.R")
multiplot(p_violin,p_CPP,Paradigm2,p_Beta,p_N2,p_Alpha,layout= matrix(c(1,2,2,3,3,5,5,1,2,2,4,4,6,6), nrow = 7, ncol = 2))
dev.off()
multiplot(p_violin,p_CPP,Paradigm2,p_Beta,p_N2,p_Alpha,layout= matrix(c(1,2,2,3,3,5,5,1,2,2,4,4,6,6), nrow = 7, ncol = 2))
Paradigm2<-ggplot(data_frame(y=c(1,459.5,919), x=c(1,492,984)), aes(x, y))  +
annotation_custom(Paradigm, xmin = 0, xmax = 980, ymin = -10, ymax = 910) +
theme(axis.title.x = element_blank(),
axis.text.x  = element_blank(),
axis.title.y = element_blank(),
axis.text.y  = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
panel.background = element_blank()) +
annotate("text", x = 100, y = 920, label = "[C]", size=6)
Paradigm2
png("Figure 2.png", width = 10*600, height = 15*600,  units = "px", res = 600)
source("multiplot.R")
multiplot(p_violin,p_CPP,Paradigm2,p_Beta,p_N2,p_Alpha,layout= matrix(c(1,2,2,3,3,5,5,1,2,2,4,4,6,6), nrow = 7, ncol = 2))
dev.off()
multiplot(p_violin,p_CPP,Paradigm2,p_Beta,p_N2,p_Alpha,layout= matrix(c(1,2,2,3,3,5,5,1,2,2,4,4,6,6), nrow = 7, ncol = 2))
Paradigm2<-ggplot(data_frame(y=c(1,459.5,919), x=c(1,492,984)), aes(x, y))  +
annotation_custom(Paradigm, xmin = 0, xmax = 980, ymin = -19, ymax = 900) +
theme(axis.title.x = element_blank(),
axis.text.x  = element_blank(),
axis.title.y = element_blank(),
axis.text.y  = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
panel.background = element_blank()) +
annotate("text", x = 100, y = 920, label = "[C]", size=6)
Paradigm2
p_scatter_Alpha<-ggplot(participant_level, aes(x=RT_Asym, y=PreAlphaAsym)) +
geom_point(shape=1, size=2) +
geom_smooth(method=lm, se=FALSE, colour="black") + # Add linear regression line # Don't add shaded confidence region
xlab("RT Asymmetry") + ylab("Pre-target Alpha Asymmetry") +
theme(axis.title.x = element_text(face="bold", size=12),
axis.text.x  = element_text(face="bold", angle=0,  size=12), #element_text(face="bold", angle=0,  size=12),
axis.title.y = element_text(face="bold", size=12),
axis.text.y  = element_text(face="bold", angle=0, size=12),
panel.background = element_blank()) +
geom_hline(yintercept=0, alpha = 0.4) +
geom_vline(xintercept=0, alpha = 0.4) + #add black likes at 0 on x and y axis
annotate("text", x = -0.1, y = 0.35, label = "[A]", size=6)
p_scatter_Alpha
png("Figure 2.png", width = 10*600, height = 15*600,  units = "px", res = 600)
source("multiplot.R")
multiplot(p_violin,p_CPP,Paradigm2,p_Beta,p_N2,p_Alpha,layout= matrix(c(1,2,2,3,3,5,5,1,2,2,4,4,6,6), nrow = 7, ncol = 2))
dev.off()
multiplot(p_violin,p_CPP,Paradigm2,p_Beta,p_N2,p_Alpha,layout= matrix(c(1,2,2,3,3,5,5,1,2,2,4,4,6,6), nrow = 7, ncol = 2))
Paradigm2<-ggplot(data_frame(y=c(1,459.5,919), x=c(1,492,984)), aes(x, y))  +
annotation_custom(Paradigm, xmin = 0, xmax = 980, ymin = -19, ymax = 900) +
theme(axis.title.x = element_blank(),
axis.text.x  = element_blank(),
axis.title.y = element_blank(),
axis.text.y  = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
panel.background = element_blank()) +
annotate("text", x = 100, y = 922, label = "[C]", size=6)
Paradigm2
png("Figure 2.png", width = 10*600, height = 15*600,  units = "px", res = 600)
source("multiplot.R")
multiplot(p_violin,p_CPP,Paradigm2,p_Beta,p_N2,p_Alpha,layout= matrix(c(1,2,2,3,3,5,5,1,2,2,4,4,6,6), nrow = 7, ncol = 2))
dev.off()
multiplot(p_violin,p_CPP,Paradigm2,p_Beta,p_N2,p_Alpha,layout= matrix(c(1,2,2,3,3,5,5,1,2,2,4,4,6,6), nrow = 7, ncol = 2))
Paradigm2<-ggplot(data_frame(y=c(1,459.5,919), x=c(1,492,984)), aes(x, y))  +
annotation_custom(Paradigm, xmin = 0, xmax = 980, ymin = -19, ymax = 900) +
theme(axis.title.x = element_blank(),
axis.text.x  = element_blank(),
axis.title.y = element_blank(),
axis.text.y  = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
panel.background = element_blank()) +
annotate("text", x = 100, y = 924, label = "[C]", size=6)
Paradigm2
png("Figure 2.png", width = 10*600, height = 15*600,  units = "px", res = 600)
source("multiplot.R")
multiplot(p_violin,p_CPP,Paradigm2,p_Beta,p_N2,p_Alpha,layout= matrix(c(1,2,2,3,3,5,5,1,2,2,4,4,6,6), nrow = 7, ncol = 2))
dev.off()
multiplot(p_violin,p_CPP,Paradigm2,p_Beta,p_N2,p_Alpha,layout= matrix(c(1,2,2,3,3,5,5,1,2,2,4,4,6,6), nrow = 7, ncol = 2))
Paradigm2<-ggplot(data_frame(y=c(1,459.5,919), x=c(1,492,984)), aes(x, y))  +
annotation_custom(Paradigm, xmin = 0, xmax = 980, ymin = -19, ymax = 900) +
theme(axis.title.x = element_blank(),
axis.text.x  = element_blank(),
axis.title.y = element_blank(),
axis.text.y  = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
panel.background = element_blank()) +
annotate("text", x = 100, y = 925, label = "[C]", size=6)
Paradigm2
png("Figure 2.png", width = 10*600, height = 15*600,  units = "px", res = 600)
source("multiplot.R")
multiplot(p_violin,p_CPP,Paradigm2,p_Beta,p_N2,p_Alpha,layout= matrix(c(1,2,2,3,3,5,5,1,2,2,4,4,6,6), nrow = 7, ncol = 2))
dev.off()
multiplot(p_violin,p_CPP,Paradigm2,p_Beta,p_N2,p_Alpha,layout= matrix(c(1,2,2,3,3,5,5,1,2,2,4,4,6,6), nrow = 7, ncol = 2))
Paradigm2<-ggplot(data_frame(y=c(1,459.5,919), x=c(1,492,984)), aes(x, y))  +
annotation_custom(Paradigm, xmin = 0, xmax = 980, ymin = -19, ymax = 900) +
theme(axis.title.x = element_blank(),
axis.text.x  = element_blank(),
axis.title.y = element_blank(),
axis.text.y  = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
panel.background = element_blank()) +
annotate("text", x = 100, y = 927, label = "[C]", size=6)
Paradigm2
png("Figure 2.png", width = 10*600, height = 15*600,  units = "px", res = 600)
source("multiplot.R")
multiplot(p_violin,p_CPP,Paradigm2,p_Beta,p_N2,p_Alpha,layout= matrix(c(1,2,2,3,3,5,5,1,2,2,4,4,6,6), nrow = 7, ncol = 2))
dev.off()
multiplot(p_violin,p_CPP,Paradigm2,p_Beta,p_N2,p_Alpha,layout= matrix(c(1,2,2,3,3,5,5,1,2,2,4,4,6,6), nrow = 7, ncol = 2))
Paradigm2<-ggplot(data_frame(y=c(1,459.5,919), x=c(1,492,984)), aes(x, y))  +
annotation_custom(Paradigm, xmin = 0, xmax = 980, ymin = -19, ymax = 900) +
theme(axis.title.x = element_blank(),
axis.text.x  = element_blank(),
axis.title.y = element_blank(),
axis.text.y  = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
panel.background = element_blank()) +
annotate("text", x = 150, y = 928, label = "[C]", size=6)
Paradigm2
png("Figure 2.png", width = 10*600, height = 15*600,  units = "px", res = 600)
source("multiplot.R")
multiplot(p_violin,p_CPP,Paradigm2,p_Beta,p_N2,p_Alpha,layout= matrix(c(1,2,2,3,3,5,5,1,2,2,4,4,6,6), nrow = 7, ncol = 2))
dev.off()
multiplot(p_violin,p_CPP,Paradigm2,p_Beta,p_N2,p_Alpha,layout= matrix(c(1,2,2,3,3,5,5,1,2,2,4,4,6,6), nrow = 7, ncol = 2))
Paradigm2<-ggplot(data_frame(y=c(1,460,920), x=c(1,490,985)), aes(x, y))  +
annotation_custom(Paradigm, xmin = 0, xmax = 980, ymin = -19, ymax = 900) +
theme(axis.title.x = element_blank(),
axis.text.x  = element_blank(),
axis.title.y = element_blank(),
axis.text.y  = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
panel.background = element_blank()) +
annotate("text", x = 150, y = 928, label = "[C]", size=6)
Paradigm2
png("Figure 2.png", width = 10*600, height = 15*600,  units = "px", res = 600)
source("multiplot.R")
multiplot(p_violin,p_CPP,Paradigm2,p_Beta,p_N2,p_Alpha,layout= matrix(c(1,2,2,3,3,5,5,1,2,2,4,4,6,6), nrow = 7, ncol = 2))
dev.off()
multiplot(p_violin,p_CPP,Paradigm2,p_Beta,p_N2,p_Alpha,layout= matrix(c(1,2,2,3,3,5,5,1,2,2,4,4,6,6), nrow = 7, ncol = 2))
Paradigm2<-ggplot(data_frame(y=c(1,460,920), x=c(1,490,985)), aes(x, y))  +
annotation_custom(Paradigm, xmin = 0, xmax = 980, ymin = -19, ymax = 900) +
theme(axis.title.x = element_blank(),
axis.text.x  = element_blank(),
axis.title.y = element_blank(),
axis.text.y  = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
panel.background = element_blank()) +
annotate("text", x = 155, y = 930, label = "[C]", size=6)
Paradigm2
png("Figure 2.png", width = 10*600, height = 15*600,  units = "px", res = 600)
source("multiplot.R")
multiplot(p_violin,p_CPP,Paradigm2,p_Beta,p_N2,p_Alpha,layout= matrix(c(1,2,2,3,3,5,5,1,2,2,4,4,6,6), nrow = 7, ncol = 2))
dev.off()
multiplot(p_violin,p_CPP,Paradigm2,p_Beta,p_N2,p_Alpha,layout= matrix(c(1,2,2,3,3,5,5,1,2,2,4,4,6,6), nrow = 7, ncol = 2))
Paradigm2<-ggplot(data_frame(y=c(1,460,920), x=c(1,490,985)), aes(x, y))  +
annotation_custom(Paradigm, xmin = 0, xmax = 980, ymin = -19, ymax = 890) +
theme(axis.title.x = element_blank(),
axis.text.x  = element_blank(),
axis.title.y = element_blank(),
axis.text.y  = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
panel.background = element_blank()) +
annotate("text", x = 155, y = 930, label = "[C]", size=6)
Paradigm2
png("Figure 2.png", width = 10*600, height = 15*600,  units = "px", res = 600)
source("multiplot.R")
multiplot(p_violin,p_CPP,Paradigm2,p_Beta,p_N2,p_Alpha,layout= matrix(c(1,2,2,3,3,5,5,1,2,2,4,4,6,6), nrow = 7, ncol = 2))
dev.off()
multiplot(p_violin,p_CPP,Paradigm2,p_Beta,p_N2,p_Alpha,layout= matrix(c(1,2,2,3,3,5,5,1,2,2,4,4,6,6), nrow = 7, ncol = 2))
Paradigm<- rasterGrob(readPNG("Paradigm_v2.png",native = T, info = T), interpolate=TRUE)
Paradigm2<-ggplot(data_frame(y=c(1,460,920), x=c(1,490,985)), aes(x, y))  +
annotation_custom(Paradigm, xmin = 0, xmax = 980, ymin = -19, ymax = 890) +
theme(axis.title.x = element_blank(),
axis.text.x  = element_blank(),
axis.title.y = element_blank(),
axis.text.y  = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
panel.background = element_blank()) +
annotate("text", x = 155, y = 930, label = "[C]", size=6)
Paradigm2
png("Figure 2.png", width = 10*600, height = 15*600,  units = "px", res = 600)
source("multiplot.R")
multiplot(p_violin,p_CPP,Paradigm2,p_Beta,p_N2,p_Alpha,layout= matrix(c(1,2,2,3,3,5,5,1,2,2,4,4,6,6), nrow = 7, ncol = 2))
dev.off()
multiplot(p_violin,p_CPP,Paradigm2,p_Beta,p_N2,p_Alpha,layout= matrix(c(1,2,2,3,3,5,5,1,2,2,4,4,6,6), nrow = 7, ncol = 2))
png("Figure 2.png", width = 10*600, height = 15*600,  units = "px", res = 600)
source("multiplot.R")
multiplot(p_violin,p_CPP,p_scatter,p_Beta,p_N2,p_Alpha,layout= matrix(c(1,2,2,3,3,5,5,1,2,2,4,4,6,6), nrow = 7, ncol = 2))
dev.off()
multiplot(p_violin,p_CPP,p_scatter,p_Beta,p_N2,p_Alpha,layout= matrix(c(1,2,2,3,3,5,5,1,2,2,4,4,6,6), nrow = 7, ncol = 2))
p_scatter_CPP<-ggplot(participant_level, aes(x=RT_Asym, y=CPPonset_Asym)) +
geom_point(shape=1, size=2) +
geom_smooth(method=lm, se=FALSE, colour="black") + # Add linear regression line # Don't add shaded confidence region
xlab("RT Asymmetry") + ylab("CPP-onset Asymmetry") +
theme(axis.title.x = element_text(face="bold", size=12),
axis.text.x  = element_text(face="bold", angle=0,  size=12), #element_text(face="bold", angle=0,  size=12),
axis.title.y = element_text(face="bold", size=12),
axis.text.y  = element_text(face="bold", angle=0, size=12),
panel.background = element_blank()) +
geom_hline(yintercept=0, alpha = 0.4) +
geom_vline(xintercept=0, alpha = 0.4) + #add black likes at 0 on x and y axis
annotate("text", x = -0.1, y = 0.35, label = "[C]", size=6)
p_scatter_CPP
png("Figure 3.png", width = 10*600, height = 4.3*600,  units = "px", res = 600)
source("multiplot.R")
multiplot(p_scatter_CPP, p_scatter_Alpha, p_scatter_N2,layout= matrix(c(1,2,3),nrow = 1, ncol = 2))
dev.off()
multiplot(p_scatter_CPP, p_scatter_Alpha, p_scatter_N2,layout= matrix(c(1,2,3),nrow = 1, ncol = 2))
png("Figure 3.png", width = 10*600, height = 4.3*600,  units = "px", res = 600)
source("multiplot.R")
multiplot(p_scatter_CPP, p_scatter_Alpha, p_scatter_N2,layout= matrix(c(1,2,3),nrow = 1, ncol = 3))
dev.off()
multiplot(p_scatter_CPP, p_scatter_Alpha, p_scatter_N2,layout= matrix(c(1,2,3),nrow = 1, ncol = 3))
p_scatter_CPP<-ggplot(participant_level, aes(x=RT_Asym, y=CPPonset_Asym)) +
geom_point(shape=1, size=2) +
geom_smooth(method=lm, se=FALSE, colour="black") + # Add linear regression line # Don't add shaded confidence region
xlab("RT Asymmetry") + ylab("CPP-onset Asymmetry") +
theme(axis.title.x = element_text(face="bold", size=12),
axis.text.x  = element_text(face="bold", angle=0,  size=12), #element_text(face="bold", angle=0,  size=12),
axis.title.y = element_text(face="bold", size=12),
axis.text.y  = element_text(face="bold", angle=0, size=12),
panel.background = element_blank()) +
geom_hline(yintercept=0, alpha = 0.4) +
geom_vline(xintercept=0, alpha = 0.4) + #add black likes at 0 on x and y axis
annotate("text", x = -0.1, y = 0.35, label = "[A]", size=6)
p_scatter_CPP
p_scatter_Alpha<-ggplot(participant_level, aes(x=RT_Asym, y=PreAlphaAsym)) +
geom_point(shape=1, size=2) +
geom_smooth(method=lm, se=FALSE, colour="black") + # Add linear regression line # Don't add shaded confidence region
xlab("RT Asymmetry") + ylab("Pre-target Alpha Asymmetry") +
theme(axis.title.x = element_text(face="bold", size=12),
axis.text.x  = element_text(face="bold", angle=0,  size=12), #element_text(face="bold", angle=0,  size=12),
axis.title.y = element_text(face="bold", size=12),
axis.text.y  = element_text(face="bold", angle=0, size=12),
panel.background = element_blank()) +
geom_hline(yintercept=0, alpha = 0.4) +
geom_vline(xintercept=0, alpha = 0.4) + #add black likes at 0 on x and y axis
annotate("text", x = -0.1, y = 0.35, label = "[C]", size=6)
p_scatter_Alpha
p_scatter_N2<-ggplot(participant_level, aes(x=RT_Asym, y=N2c_latency_Asym)) +
geom_point(shape=1, size=2) +
geom_smooth(method=lm, se=FALSE, colour="black") + # Add linear regression line # Don't add shaded confidence region
xlab("RT Asymmetry") + ylab("N2c-latency Asymmetry") +
theme(axis.title.x = element_text(face="bold", size=12),
axis.text.x  = element_text(face="bold", angle=0,  size=12), #element_text(face="bold", angle=0,  size=12),
axis.title.y = element_text(face="bold", size=12),
axis.text.y  = element_text(face="bold", angle=0, size=12),
panel.background = element_blank()) +
geom_hline(yintercept=0, alpha = 0.4) +
geom_vline(xintercept=0, alpha = 0.4) + #add black likes at 0 on x and y axis
annotate("text", x = -0.1, y = 0.3, label = "[B]", size=6)
p_scatter_N2
10*600
png("Figure 3.png", width = 12*600, height = 4.3*600,  units = "px", res = 600)
source("multiplot.R")
multiplot(p_scatter_CPP, p_scatter_N2, p_scatter_Alpha,layout= matrix(c(1,2,3),nrow = 1, ncol = 3))
dev.off()
multiplot(p_scatter_CPP, p_scatter_N2, p_scatter_Alpha,layout= matrix(c(1,2,3),nrow = 1, ncol = 3))
png("Figure 1.png", width = 10*600, height = 15*600,  units = "px", res = 600)
source("multiplot.R")
multiplot(p_violin,p_CPP,Paradigm2,p_Beta,p_N2,p_Alpha,layout= matrix(c(1,2,2,3,3,5,5,1,2,2,4,4,6,6), nrow = 7, ncol = 2))
dev.off()
multiplot(p_violin,p_CPP,Paradigm2,p_Beta,p_N2,p_Alpha,layout= matrix(c(1,2,2,3,3,5,5,1,2,2,4,4,6,6), nrow = 7, ncol = 2))
p_scatter_CPP<-ggplot(participant_level, aes(x=RT_Asym, y=CPPonset_Asym)) +
geom_point(shape=1, size=2) +
geom_smooth(method=lm, se=FALSE, colour="black") + # Add linear regression line # Don't add shaded confidence region
xlab("RT Asymmetry") + ylab("CPP-onset Asymmetry") +
theme(axis.title.x = element_text(face="bold", size=12),
axis.text.x  = element_text(face="bold", angle=0,  size=12), #element_text(face="bold", angle=0,  size=12),
axis.title.y = element_text(face="bold", size=12),
axis.text.y  = element_text(face="bold", angle=0, size=12),
panel.background = element_blank()) +
geom_hline(yintercept=0, alpha = 0.4) +
geom_vline(xintercept=0, alpha = 0.4) + #add black likes at 0 on x and y axis
annotate("text", x = -0.1, y = 0.35, label = "[A]", size=6)
p_scatter_CPP
p_scatter_Alpha<-ggplot(participant_level, aes(x=RT_Asym, y=PreAlphaAsym)) +
geom_point(shape=1, size=2) +
geom_smooth(method=lm, se=FALSE, colour="black") + # Add linear regression line # Don't add shaded confidence region
xlab("RT Asymmetry") + ylab("Pre-target Alpha Asymmetry") +
theme(axis.title.x = element_text(face="bold", size=12),
axis.text.x  = element_text(face="bold", angle=0,  size=12), #element_text(face="bold", angle=0,  size=12),
axis.title.y = element_text(face="bold", size=12),
axis.text.y  = element_text(face="bold", angle=0, size=12),
panel.background = element_blank()) +
geom_hline(yintercept=0, alpha = 0.4) +
geom_vline(xintercept=0, alpha = 0.4) + #add black likes at 0 on x and y axis
annotate("text", x = -0.1, y = 0.35, label = "[C]", size=6)
p_scatter_Alpha
p_scatter_N2<-ggplot(participant_level, aes(x=RT_Asym, y=N2c_latency_Asym)) +
geom_point(shape=1, size=2) +
geom_smooth(method=lm, se=FALSE, colour="black") + # Add linear regression line # Don't add shaded confidence region
xlab("RT Asymmetry") + ylab("N2c-latency Asymmetry") +
theme(axis.title.x = element_text(face="bold", size=12),
axis.text.x  = element_text(face="bold", angle=0,  size=12), #element_text(face="bold", angle=0,  size=12),
axis.title.y = element_text(face="bold", size=12),
axis.text.y  = element_text(face="bold", angle=0, size=12),
panel.background = element_blank()) +
geom_hline(yintercept=0, alpha = 0.4) +
geom_vline(xintercept=0, alpha = 0.4) + #add black likes at 0 on x and y axis
annotate("text", x = -0.1, y = 0.3, label = "[B]", size=6)
p_scatter_N2
png("Figure 2.png", width = 12*600, height = 4.3*600,  units = "px", res = 600)
source("multiplot.R")
multiplot(p_scatter_CPP, p_scatter_N2, p_scatter_Alpha,layout= matrix(c(1,2,3),nrow = 1, ncol = 3))
dev.off()
multiplot(p_scatter_CPP, p_scatter_N2, p_scatter_Alpha,layout= matrix(c(1,2,3),nrow = 1, ncol = 3))
p_scatter_CPP<-ggplot(participant_level, aes(x=RT_Asym, y=CPPonset_Asym)) +
geom_point(shape=1, size=2) +
geom_smooth(method=lm, se=FALSE, colour="black") + # Add linear regression line # Don't add shaded confidence region
xlab("RT Asymmetry") + ylab("CPP-onset Asymmetry") +
theme(axis.title.x = element_text(face="bold", size=13),
axis.text.x  = element_text(face="bold", angle=0,  size=13), #element_text(face="bold", angle=0,  size=13),
axis.title.y = element_text(face="bold", size=13),
axis.text.y  = element_text(face="bold", angle=0, size=13),
panel.background = element_blank()) +
geom_hline(yintercept=0, alpha = 0.4) +
geom_vline(xintercept=0, alpha = 0.4) + #add black likes at 0 on x and y axis
annotate("text", x = -0.1, y = 0.35, label = "[A]", size=6)
p_scatter_CPP
p_scatter_Alpha<-ggplot(participant_level, aes(x=RT_Asym, y=PreAlphaAsym)) +
geom_point(shape=1, size=2) +
geom_smooth(method=lm, se=FALSE, colour="black") + # Add linear regression line # Don't add shaded confidence region
xlab("RT Asymmetry") + ylab("Pre-target Alpha Asymmetry") +
theme(axis.title.x = element_text(face="bold", size=13),
axis.text.x  = element_text(face="bold", angle=0,  size=13), #element_text(face="bold", angle=0,  size=13),
axis.title.y = element_text(face="bold", size=13),
axis.text.y  = element_text(face="bold", angle=0, size=13),
panel.background = element_blank()) +
geom_hline(yintercept=0, alpha = 0.4) +
geom_vline(xintercept=0, alpha = 0.4) + #add black likes at 0 on x and y axis
annotate("text", x = -0.1, y = 0.35, label = "[C]", size=6)
p_scatter_Alpha
p_scatter_N2<-ggplot(participant_level, aes(x=RT_Asym, y=N2c_latency_Asym)) +
geom_point(shape=1, size=2) +
geom_smooth(method=lm, se=FALSE, colour="black") + # Add linear regression line # Don't add shaded confidence region
xlab("RT Asymmetry") + ylab("N2c-latency Asymmetry") +
theme(axis.title.x = element_text(face="bold", size=13),
axis.text.x  = element_text(face="bold", angle=0,  size=13), #element_text(face="bold", angle=0,  size=13),
axis.title.y = element_text(face="bold", size=13),
axis.text.y  = element_text(face="bold", angle=0, size=13),
panel.background = element_blank()) +
geom_hline(yintercept=0, alpha = 0.4) +
geom_vline(xintercept=0, alpha = 0.4) + #add black likes at 0 on x and y axis
annotate("text", x = -0.1, y = 0.3, label = "[B]", size=6)
p_scatter_N2
png("Figure 2.png", width = 12*600, height = 4.3*600,  units = "px", res = 600)
source("multiplot.R")
multiplot(p_scatter_CPP, p_scatter_N2, p_scatter_Alpha,layout= matrix(c(1,2,3),nrow = 1, ncol = 3))
dev.off()
multiplot(p_scatter_CPP, p_scatter_N2, p_scatter_Alpha,layout= matrix(c(1,2,3),nrow = 1, ncol = 3))
p_scatter_CPP<-ggplot(participant_level, aes(x=RT_Asym, y=CPPonset_Asym)) +
geom_point(shape=1, size=2) +
geom_smooth(method=lm, se=FALSE, colour="black") + # Add linear regression line # Don't add shaded confidence region
xlab("RT Asymmetry") + ylab("CPP-onset Asymmetry") +
theme(axis.title.x = element_text(face="bold", size=13),
axis.text.x  = element_text(face="bold", angle=0,  size=13), #element_text(face="bold", angle=0,  size=13),
axis.title.y = element_text(face="bold", size=13),
axis.text.y  = element_text(face="bold", angle=0, size=13),
panel.background = element_blank()) +
geom_hline(yintercept=0, alpha = 0.4) +
geom_vline(xintercept=0, alpha = 0.4) + #add black likes at 0 on x and y axis
annotate("text", x = -0.1, y = 0.40, label = "[A]", size=6)
p_scatter_CPP
p_scatter_Alpha<-ggplot(participant_level, aes(x=RT_Asym, y=PreAlphaAsym)) +
geom_point(shape=1, size=2) +
geom_smooth(method=lm, se=FALSE, colour="black") + # Add linear regression line # Don't add shaded confidence region
xlab("RT Asymmetry") + ylab("Pre-target Alpha Asymmetry") +
theme(axis.title.x = element_text(face="bold", size=13),
axis.text.x  = element_text(face="bold", angle=0,  size=13), #element_text(face="bold", angle=0,  size=13),
axis.title.y = element_text(face="bold", size=13),
axis.text.y  = element_text(face="bold", angle=0, size=13),
panel.background = element_blank()) +
geom_hline(yintercept=0, alpha = 0.4) +
geom_vline(xintercept=0, alpha = 0.4) + #add black likes at 0 on x and y axis
annotate("text", x = -0.1, y = 0.35, label = "[C]", size=6)
p_scatter_Alpha
p_scatter_N2<-ggplot(participant_level, aes(x=RT_Asym, y=N2c_latency_Asym)) +
geom_point(shape=1, size=2) +
geom_smooth(method=lm, se=FALSE, colour="black") + # Add linear regression line # Don't add shaded confidence region
xlab("RT Asymmetry") + ylab("N2c-latency Asymmetry") +
theme(axis.title.x = element_text(face="bold", size=13),
axis.text.x  = element_text(face="bold", angle=0,  size=13), #element_text(face="bold", angle=0,  size=13),
axis.title.y = element_text(face="bold", size=13),
axis.text.y  = element_text(face="bold", angle=0, size=13),
panel.background = element_blank()) +
geom_hline(yintercept=0, alpha = 0.4) +
geom_vline(xintercept=0, alpha = 0.4) + #add black likes at 0 on x and y axis
annotate("text", x = -0.1, y = 0.3, label = "[B]", size=6)
p_scatter_N2
png("Figure 2.png", width = 12*600, height = 4.3*600,  units = "px", res = 600)
source("multiplot.R")
multiplot(p_scatter_CPP, p_scatter_N2, p_scatter_Alpha,layout= matrix(c(1,2,3),nrow = 1, ncol = 3))
dev.off()
multiplot(p_scatter_CPP, p_scatter_N2, p_scatter_Alpha,layout= matrix(c(1,2,3),nrow = 1, ncol = 3))
p_scatter_CPP<-ggplot(participant_level, aes(x=RT_Asym, y=CPPonset_Asym)) +
geom_point(shape=1, size=2) +
geom_smooth(method=lm, se=FALSE, colour="black") + # Add linear regression line # Don't add shaded confidence region
xlab("RT Asymmetry") + ylab("CPP-onset Asymmetry") +
theme(axis.title.x = element_text(face="bold", size=14),
axis.text.x  = element_text(face="bold", angle=0,  size=14), #element_text(face="bold", angle=0,  size=14),
axis.title.y = element_text(face="bold", size=14),
axis.text.y  = element_text(face="bold", angle=0, size=14),
panel.background = element_blank()) +
geom_hline(yintercept=0, alpha = 0.4) +
geom_vline(xintercept=0, alpha = 0.4) + #add black likes at 0 on x and y axis
annotate("text", x = -0.1, y = 0.40, label = "[A]", size=6)
p_scatter_CPP
p_scatter_Alpha<-ggplot(participant_level, aes(x=RT_Asym, y=PreAlphaAsym)) +
geom_point(shape=1, size=2) +
geom_smooth(method=lm, se=FALSE, colour="black") + # Add linear regression line # Don't add shaded confidence region
xlab("RT Asymmetry") + ylab("Pre-target Alpha Asymmetry") +
theme(axis.title.x = element_text(face="bold", size=14),
axis.text.x  = element_text(face="bold", angle=0,  size=14), #element_text(face="bold", angle=0,  size=14),
axis.title.y = element_text(face="bold", size=14),
axis.text.y  = element_text(face="bold", angle=0, size=14),
panel.background = element_blank()) +
geom_hline(yintercept=0, alpha = 0.4) +
geom_vline(xintercept=0, alpha = 0.4) + #add black likes at 0 on x and y axis
annotate("text", x = -0.1, y = 0.35, label = "[C]", size=6)
p_scatter_Alpha
p_scatter_N2<-ggplot(participant_level, aes(x=RT_Asym, y=N2c_latency_Asym)) +
geom_point(shape=1, size=2) +
geom_smooth(method=lm, se=FALSE, colour="black") + # Add linear regression line # Don't add shaded confidence region
xlab("RT Asymmetry") + ylab("N2c-latency Asymmetry") +
theme(axis.title.x = element_text(face="bold", size=14),
axis.text.x  = element_text(face="bold", angle=0,  size=14), #element_text(face="bold", angle=0,  size=14),
axis.title.y = element_text(face="bold", size=14),
axis.text.y  = element_text(face="bold", angle=0, size=14),
panel.background = element_blank()) +
geom_hline(yintercept=0, alpha = 0.4) +
geom_vline(xintercept=0, alpha = 0.4) + #add black likes at 0 on x and y axis
annotate("text", x = -0.1, y = 0.3, label = "[B]", size=6)
p_scatter_N2
png("Figure 2.png", width = 12*600, height = 4.3*600,  units = "px", res = 600)
source("multiplot.R")
multiplot(p_scatter_CPP, p_scatter_N2, p_scatter_Alpha,layout= matrix(c(1,2,3),nrow = 1, ncol = 3))
dev.off()
multiplot(p_scatter_CPP, p_scatter_N2, p_scatter_Alpha,layout= matrix(c(1,2,3),nrow = 1, ncol = 3))
