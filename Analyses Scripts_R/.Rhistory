colour  = scales::hue_pal()(1), size=0.75, alpha=0.75) +
geom_hline(yintercept=as.numeric(participant_level %>% select(CPPonset_RightTarget) %>% summarise(mean(CPPonset_RightTarget))),
colour  = scales::hue_pal()(2)[2], size=0.75, alpha=0.75) +
stat_summary(fun.data="mean_se",  fun.args = list(mult=1),
geom="pointrange", color = "purple", size=0.5) +
coord_flip() +
annotate("text", x = 4.25, y = -75, label = "[A]", size=8)
p2<-ggplot(plotdata_Stim_locked_CPP, aes(x=Time, y=CPP, color=Hemifield,fill=Hemifield)) +
geom_line(size=1) +
geom_ribbon(aes(ymin=CPP-ci, ymax=CPP+ci), alpha = 0.5, colour=NA) +
coord_cartesian(ylim = c(-0.1, 6),  xlim = c(-100, 900)) +
xlab("Time (ms)") + ylab("CPP Amplitude (uV)") +
theme_bw() +
theme(axis.title.x = element_text(face="bold", size=12),
axis.text.x  = element_text(face="bold", angle=0,  size=12), #element_text(face="bold", angle=0,  size=12),
axis.title.y = element_text(face="bold", size=12),
axis.text.y  = element_text(angle=0, vjust=0.5, size=12),
legend.title = element_text(size=11, face="bold"),
legend.text = element_text(size = 11, face = "bold"),
legend.position= c(0.88,0.88)) + #Move ledgend position
guides(color=FALSE) +
annotation_custom(CPP_scalp,xmin = 100, xmax = 200, ymin = 4.75, ymax = 6.25) + #add the CPP scapl plot
geom_vline(xintercept=as.numeric(participant_level %>% select(RT_Left) %>% summarise(mean(RT_Left))), #add dashed verticle for RT
colour  = scales::hue_pal()(1), size=0.75,  linetype="dashed", alpha=0.75) +
geom_vline(xintercept=as.numeric(participant_level %>% select(RT_Right) %>% summarise(mean(RT_Right))),
colour  = scales::hue_pal()(2)[2], size=0.75,  linetype="dashed", alpha=0.75) +
geom_vline(xintercept=as.numeric(participant_level %>% select(CPPonset_LeftTarget) %>% summarise(mean(CPPonset_LeftTarget))),
colour  = scales::hue_pal()(1), size=0.75, alpha=0.75) +
geom_vline(xintercept=as.numeric(participant_level %>% select(CPPonset_RightTarget) %>% summarise(mean(CPPonset_RightTarget))),
colour  = scales::hue_pal()(2)[2], size=0.75, alpha=0.75) +
geom_hline(yintercept=0, alpha = 0.5) +
geom_vline(xintercept=0, alpha = 0.5) + #add black likes at 0 on x and y axis
annotate("text", x = -75, y = 6, label = "[B]", size=8)
png("CPP_and_RT.png",  width = 9*600, height = 6*600, units = "px", res = 600)
source("multiplot.R")
multiplot(p1,p2,layout= matrix(c(1,2,2)))
dev.off()
multiplot(p1,p2,layout= matrix(c(1,2,2)))
p1<-ggplot(participant_level_long, aes(measure_type, data, colour = Hemifield))  +
scale_y_continuous(limits = c(-100, 900)) +
geom_violin(aes(linetype = Measure), size=1) +
# geom_boxplot(aes(linetype = Measure), alpha=0.1, notch=T, notchwidth=0.75, width = 0.3) +
xlab("Target Hemifield") + ylab("Time (ms)") +
theme_bw() +
theme(  axis.title.x = element_blank(), #element_text(face="bold", size=12),
axis.text.x  =  element_blank(), #element_text(face="bold", angle=0,  size=12),
axis.ticks.x=element_blank(),
axis.title.y = element_text(face="bold", size=12, colour = "white"),
axis.text.y=element_text(angle=90, vjust=0.5, size=10, colour = "white"),
axis.ticks.y=element_blank(),
legend.title = element_text(size=11, face="bold"),
legend.text = element_text(size = 11, face = "bold"),
legend.position=c(0.9,0.22),  #Move ledgend position
axis.line = element_line(colour = "black")) +
guides(colour=FALSE) +
geom_hline(yintercept=0, alpha = 0.5) +
geom_hline(yintercept=as.numeric(participant_level %>% select(RT_Left) %>% summarise(mean(RT_Left))), #add dashed verticle for RT
colour  = scales::hue_pal()(1), size=0.75,  linetype="dashed", alpha=0.75) +
geom_hline(yintercept=as.numeric(participant_level %>% select(RT_Right) %>% summarise(mean(RT_Right))),
colour  = scales::hue_pal()(2)[2], size=0.75,  linetype="dashed", alpha=0.75) +
geom_hline(yintercept=as.numeric(participant_level %>% select(CPPonset_LeftTarget) %>% summarise(mean(CPPonset_LeftTarget))),
colour  = scales::hue_pal()(1), size=0.75, alpha=0.75) +
geom_hline(yintercept=as.numeric(participant_level %>% select(CPPonset_RightTarget) %>% summarise(mean(CPPonset_RightTarget))),
colour  = scales::hue_pal()(2)[2], size=0.75, alpha=0.75) +
stat_summary(fun.data="mean_se",  fun.args = list(mult=1),
geom="pointrange", color = "purple", size=0.5) +
coord_flip() +
annotate("text", x = 4.25, y = -75, label = "[A]", size=7)
p2<-ggplot(plotdata_Stim_locked_CPP, aes(x=Time, y=CPP, color=Hemifield,fill=Hemifield)) +
geom_line(size=1) +
geom_ribbon(aes(ymin=CPP-ci, ymax=CPP+ci), alpha = 0.5, colour=NA) +
coord_cartesian(ylim = c(-0.1, 6),  xlim = c(-100, 900)) +
xlab("Time (ms)") + ylab("CPP Amplitude (uV)") +
theme_bw() +
theme(axis.title.x = element_text(face="bold", size=12),
axis.text.x  = element_text(face="bold", angle=0,  size=12), #element_text(face="bold", angle=0,  size=12),
axis.title.y = element_text(face="bold", size=12),
axis.text.y  = element_text(angle=0, vjust=0.5, size=12),
legend.title = element_text(size=11, face="bold"),
legend.text = element_text(size = 11, face = "bold"),
legend.position= c(0.88,0.88)) + #Move ledgend position
guides(color=FALSE) +
annotation_custom(CPP_scalp,xmin = 100, xmax = 200, ymin = 4.75, ymax = 6.25) + #add the CPP scapl plot
geom_vline(xintercept=as.numeric(participant_level %>% select(RT_Left) %>% summarise(mean(RT_Left))), #add dashed verticle for RT
colour  = scales::hue_pal()(1), size=0.75,  linetype="dashed", alpha=0.75) +
geom_vline(xintercept=as.numeric(participant_level %>% select(RT_Right) %>% summarise(mean(RT_Right))),
colour  = scales::hue_pal()(2)[2], size=0.75,  linetype="dashed", alpha=0.75) +
geom_vline(xintercept=as.numeric(participant_level %>% select(CPPonset_LeftTarget) %>% summarise(mean(CPPonset_LeftTarget))),
colour  = scales::hue_pal()(1), size=0.75, alpha=0.75) +
geom_vline(xintercept=as.numeric(participant_level %>% select(CPPonset_RightTarget) %>% summarise(mean(CPPonset_RightTarget))),
colour  = scales::hue_pal()(2)[2], size=0.75, alpha=0.75) +
geom_hline(yintercept=0, alpha = 0.5) +
geom_vline(xintercept=0, alpha = 0.5) + #add black likes at 0 on x and y axis
annotate("text", x = -75, y = 6, label = "[B]", size=7)
png("CPP_and_RT.png",  width = 9*600, height = 6*600, units = "px", res = 600)
source("multiplot.R")
multiplot(p1,p2,layout= matrix(c(1,2,2)))
dev.off()
multiplot(p1,p2,layout= matrix(c(1,2,2)))
#N2c plot
ggplot(plotdata_Stim_locked_N2c, aes(x=Time, y=N2c, color=Hemifield,fill=Hemifield)) +
p1<-ggplot(participant_level_long, aes(measure_type, data, colour = Hemifield))  +
scale_y_continuous(limits = c(-100, 900)) +
geom_violin(aes(linetype = Measure), size=1) +
# geom_boxplot(aes(linetype = Measure), alpha=0.1, notch=T, notchwidth=0.75, width = 0.3) +
xlab("Target Hemifield") + ylab("Time (ms)") +
theme_bw() +
theme(  axis.title.x = element_blank(), #element_text(face="bold", size=12),
axis.text.x  =  element_blank(), #element_text(face="bold", angle=0,  size=12),
axis.ticks.x=element_blank(),
axis.title.y = element_text(face="bold", size=12, colour = "white"),
axis.text.y=element_text(angle=90, vjust=0.5, size=10, colour = "white"),
axis.ticks.y=element_blank(),
legend.title = element_text(size=11, face="bold"),
legend.text = element_text(size = 11, face = "bold"),
legend.position=c(0.9,0.22),  #Move ledgend position
axis.line = element_line(colour = "black")) +
guides(colour=FALSE) +
geom_hline(yintercept=0, alpha = 0.5) +
geom_hline(yintercept=as.numeric(participant_level %>% select(RT_Left) %>% summarise(mean(RT_Left))), #add dashed verticle for RT
colour  = scales::hue_pal()(1), size=0.75,  linetype="dashed", alpha=0.75) +
geom_hline(yintercept=as.numeric(participant_level %>% select(RT_Right) %>% summarise(mean(RT_Right))),
colour  = scales::hue_pal()(2)[2], size=0.75,  linetype="dashed", alpha=0.75) +
geom_hline(yintercept=as.numeric(participant_level %>% select(CPPonset_LeftTarget) %>% summarise(mean(CPPonset_LeftTarget))),
colour  = scales::hue_pal()(1), size=0.75, alpha=0.75) +
geom_hline(yintercept=as.numeric(participant_level %>% select(CPPonset_RightTarget) %>% summarise(mean(CPPonset_RightTarget))),
colour  = scales::hue_pal()(2)[2], size=0.75, alpha=0.75) +
stat_summary(fun.data="mean_se",  fun.args = list(mult=1),
geom="pointrange", color = "purple", size=0.5) +
coord_flip() +
annotate("text", x = 4.25, y = -75, label = "[A]", size=6)
p2<-ggplot(plotdata_Stim_locked_CPP, aes(x=Time, y=CPP, color=Hemifield,fill=Hemifield)) +
geom_line(size=1) +
geom_ribbon(aes(ymin=CPP-ci, ymax=CPP+ci), alpha = 0.5, colour=NA) +
coord_cartesian(ylim = c(-0.1, 6),  xlim = c(-100, 900)) +
xlab("Time (ms)") + ylab("CPP Amplitude (uV)") +
theme_bw() +
theme(axis.title.x = element_text(face="bold", size=12),
axis.text.x  = element_text(face="bold", angle=0,  size=12), #element_text(face="bold", angle=0,  size=12),
axis.title.y = element_text(face="bold", size=12),
axis.text.y  = element_text(angle=0, vjust=0.5, size=12),
legend.title = element_text(size=11, face="bold"),
legend.text = element_text(size = 11, face = "bold"),
legend.position= c(0.88,0.88)) + #Move ledgend position
guides(color=FALSE) +
annotation_custom(CPP_scalp,xmin = 100, xmax = 200, ymin = 4.75, ymax = 6.25) + #add the CPP scapl plot
geom_vline(xintercept=as.numeric(participant_level %>% select(RT_Left) %>% summarise(mean(RT_Left))), #add dashed verticle for RT
colour  = scales::hue_pal()(1), size=0.75,  linetype="dashed", alpha=0.75) +
geom_vline(xintercept=as.numeric(participant_level %>% select(RT_Right) %>% summarise(mean(RT_Right))),
colour  = scales::hue_pal()(2)[2], size=0.75,  linetype="dashed", alpha=0.75) +
geom_vline(xintercept=as.numeric(participant_level %>% select(CPPonset_LeftTarget) %>% summarise(mean(CPPonset_LeftTarget))),
colour  = scales::hue_pal()(1), size=0.75, alpha=0.75) +
geom_vline(xintercept=as.numeric(participant_level %>% select(CPPonset_RightTarget) %>% summarise(mean(CPPonset_RightTarget))),
colour  = scales::hue_pal()(2)[2], size=0.75, alpha=0.75) +
geom_hline(yintercept=0, alpha = 0.5) +
geom_vline(xintercept=0, alpha = 0.5) + #add black likes at 0 on x and y axis
annotate("text", x = -75, y = 6, label = "[B]", size=6)
png("CPP_and_RT.png",  width = 9*600, height = 6*600, units = "px", res = 600)
source("multiplot.R")
multiplot(p1,p2,layout= matrix(c(1,2,2)))
dev.off()
multiplot(p1,p2,layout= matrix(c(1,2,2)))
p1<-ggplot(participant_level_long, aes(measure_type, data, colour = Hemifield))  +
scale_y_continuous(limits = c(-100, 900)) +
geom_violin(aes(linetype = Measure), size=1) +
# geom_boxplot(aes(linetype = Measure), alpha=0.1, notch=T, notchwidth=0.75, width = 0.3) +
xlab("Target Hemifield") + ylab("Time (ms)") +
theme_bw() +
theme(  axis.title.x = element_blank(), #element_text(face="bold", size=12),
axis.text.x  =  element_blank(), #element_text(face="bold", angle=0,  size=12),
axis.ticks.x=element_blank(),
axis.title.y = element_text(face="bold", size=12, colour = "white"),
axis.text.y=element_text(angle=90, vjust=0.5, size=10, colour = "white"),
axis.ticks.y=element_blank(),
legend.title = element_text(size=11, face="bold"),
legend.text = element_text(size = 11, face = "bold"),
legend.position=c(0.9,0.22),  #Move ledgend position
axis.line = element_line(colour = "black")) +
guides(colour=FALSE) +
geom_hline(yintercept=0, alpha = 0.5) +
geom_hline(yintercept=as.numeric(participant_level %>% select(RT_Left) %>% summarise(mean(RT_Left))), #add dashed verticle for RT
colour  = scales::hue_pal()(1), size=0.75,  linetype="dashed", alpha=0.75) +
geom_hline(yintercept=as.numeric(participant_level %>% select(RT_Right) %>% summarise(mean(RT_Right))),
colour  = scales::hue_pal()(2)[2], size=0.75,  linetype="dashed", alpha=0.75) +
geom_hline(yintercept=as.numeric(participant_level %>% select(CPPonset_LeftTarget) %>% summarise(mean(CPPonset_LeftTarget))),
colour  = scales::hue_pal()(1), size=0.75, alpha=0.75) +
geom_hline(yintercept=as.numeric(participant_level %>% select(CPPonset_RightTarget) %>% summarise(mean(CPPonset_RightTarget))),
colour  = scales::hue_pal()(2)[2], size=0.75, alpha=0.75) +
stat_summary(fun.data="mean_se",  fun.args = list(mult=1),
geom="pointrange", color = "purple", size=0.5) +
coord_flip() +
annotate("text", x = 4.25, y = -75, label = "[A]", size=6)
p2<-ggplot(plotdata_Stim_locked_CPP, aes(x=Time, y=CPP, color=Hemifield,fill=Hemifield)) +
geom_line(size=1) +
geom_ribbon(aes(ymin=CPP-ci, ymax=CPP+ci), alpha = 0.5, colour=NA) +
coord_cartesian(ylim = c(-0.1, 6),  xlim = c(-100, 900)) +
xlab("Time (ms)") + ylab("CPP Amplitude (uV)") +
theme_bw() +
theme(axis.title.x = element_text(face="bold", size=12),
axis.text.x  = element_text(face="bold", angle=0,  size=12), #element_text(face="bold", angle=0,  size=12),
axis.title.y = element_text(face="bold", size=12),
axis.text.y  = element_text(angle=0, vjust=0.5, size=12),
legend.title = element_text(size=11, face="bold"),
legend.text = element_text(size = 11, face = "bold"),
legend.position= c(0.88,0.88)) + #Move ledgend position
guides(color=FALSE) +
annotation_custom(CPP_scalp,xmin = 100, xmax = 200, ymin = 4.75, ymax = 6.25) + #add the CPP scapl plot
geom_vline(xintercept=as.numeric(participant_level %>% select(RT_Left) %>% summarise(mean(RT_Left))), #add dashed verticle for RT
colour  = scales::hue_pal()(1), size=0.75,  linetype="dashed", alpha=0.75) +
geom_vline(xintercept=as.numeric(participant_level %>% select(RT_Right) %>% summarise(mean(RT_Right))),
colour  = scales::hue_pal()(2)[2], size=0.75,  linetype="dashed", alpha=0.75) +
geom_vline(xintercept=as.numeric(participant_level %>% select(CPPonset_LeftTarget) %>% summarise(mean(CPPonset_LeftTarget))),
colour  = scales::hue_pal()(1), size=0.75, alpha=0.75) +
geom_vline(xintercept=as.numeric(participant_level %>% select(CPPonset_RightTarget) %>% summarise(mean(CPPonset_RightTarget))),
colour  = scales::hue_pal()(2)[2], size=0.75, alpha=0.75) +
geom_hline(yintercept=0, alpha = 0.5) +
geom_vline(xintercept=0, alpha = 0.5) + #add black likes at 0 on x and y axis
annotate("text", x = -75, y = 6, label = "[B]", size=6)
png("CPP_and_RT.png",  width = 9*600, height = 6*600, units = "px", res = 600)
source("multiplot.R")
multiplot(p1,p2,layout= matrix(c(1,2,2)))
dev.off()
multiplot(p1,p2,layout= matrix(c(1,2,2)))
png("CPP_and_RT.png",   units = "px", res = 600)
source("multiplot.R")
multiplot(p1,p2,layout= matrix(c(1,2,2)))
dev.off()
multiplot(p1,p2,layout= matrix(c(1,2,2)))
9*2
png("CPP_and_RT.png", width = 18*600, height = 12*600,  units = "px", res = 600)
source("multiplot.R")
multiplot(p1,p2,layout= matrix(c(1,2,2)))
dev.off()
multiplot(p1,p2,layout= matrix(c(1,2,2)))
4.5*600
png("CPP_and_RT.png", width = 4.5*600, height = 3*600,  units = "px", res = 600)
source("multiplot.R")
multiplot(p1,p2,layout= matrix(c(1,2,2)))
dev.off()
multiplot(p1,p2,layout= matrix(c(1,2,2)))
4.5*900
9*500
png("CPP_and_RT.png", width = 9*500, height = 6*500,  units = "px", res = 600)
source("multiplot.R")
multiplot(p1,p2,layout= matrix(c(1,2,2)))
dev.off()
multiplot(p1,p2,layout= matrix(c(1,2,2)))
png("CPP_and_RT.png", width = 9*600, height = 6*600,  units = "px", res = 600)
source("multiplot.R")
multiplot(p1,p2,layout= matrix(c(1,2,2)))
dev.off()
multiplot(p1,p2,layout= matrix(c(1,2,2)))
p1<-ggplot(participant_level_long, aes(measure_type, data, colour = Hemifield))  +
scale_y_continuous(limits = c(-100, 900)) +
geom_violin(aes(linetype = Measure), size=1) +
# geom_boxplot(aes(linetype = Measure), alpha=0.1, notch=T, notchwidth=0.75, width = 0.3) +
xlab("Target Hemifield") + ylab("Time (ms)") +
theme_bw() +
theme(  axis.title.x = element_blank(), #element_text(face="bold", size=12),
axis.text.x  =  element_blank(), #element_text(face="bold", angle=0,  size=12),
axis.ticks.x=element_blank(),
axis.title.y = element_text(face="bold", size=12, colour = "white"),
axis.text.y=element_text(angle=90, vjust=0.5, size=10, colour = "white"),
axis.ticks.y=element_blank(),
legend.title = element_text(size=12, face="bold"),
legend.text = element_text(size = 12, face = "bold"),
legend.position=c(0.9,0.22),  #Move ledgend position
axis.line = element_line(colour = "black")) +
guides(colour=FALSE) +
geom_hline(yintercept=0, alpha = 0.5) +
geom_hline(yintercept=as.numeric(participant_level %>% select(RT_Left) %>% summarise(mean(RT_Left))), #add dashed verticle for RT
colour  = scales::hue_pal()(1), size=0.75,  linetype="dashed", alpha=0.75) +
geom_hline(yintercept=as.numeric(participant_level %>% select(RT_Right) %>% summarise(mean(RT_Right))),
colour  = scales::hue_pal()(2)[2], size=0.75,  linetype="dashed", alpha=0.75) +
geom_hline(yintercept=as.numeric(participant_level %>% select(CPPonset_LeftTarget) %>% summarise(mean(CPPonset_LeftTarget))),
colour  = scales::hue_pal()(1), size=0.75, alpha=0.75) +
geom_hline(yintercept=as.numeric(participant_level %>% select(CPPonset_RightTarget) %>% summarise(mean(CPPonset_RightTarget))),
colour  = scales::hue_pal()(2)[2], size=0.75, alpha=0.75) +
stat_summary(fun.data="mean_se",  fun.args = list(mult=1),
geom="pointrange", color = "purple", size=0.5) +
coord_flip() +
annotate("text", x = 4.25, y = -75, label = "[A]", size=6)
p2<-ggplot(plotdata_Stim_locked_CPP, aes(x=Time, y=CPP, color=Hemifield,fill=Hemifield)) +
geom_line(size=1) +
geom_ribbon(aes(ymin=CPP-ci, ymax=CPP+ci), alpha = 0.5, colour=NA) +
coord_cartesian(ylim = c(-0.1, 6),  xlim = c(-100, 900)) +
xlab("Time (ms)") + ylab("CPP Amplitude (uV)") +
theme_bw() +
theme(axis.title.x = element_text(face="bold", size=12),
axis.text.x  = element_text(face="bold", angle=0,  size=12), #element_text(face="bold", angle=0,  size=12),
axis.title.y = element_text(face="bold", size=12),
axis.text.y  = element_text(angle=0, vjust=0.5, size=12),
legend.title = element_text(size=12, face="bold"),
legend.text = element_text(size = 12, face = "bold"),
legend.position= c(0.88,0.88)) + #Move ledgend position
guides(color=FALSE) +
annotation_custom(CPP_scalp,xmin = 100, xmax = 200, ymin = 4.75, ymax = 6.25) + #add the CPP scapl plot
geom_vline(xintercept=as.numeric(participant_level %>% select(RT_Left) %>% summarise(mean(RT_Left))), #add dashed verticle for RT
colour  = scales::hue_pal()(1), size=0.75,  linetype="dashed", alpha=0.75) +
geom_vline(xintercept=as.numeric(participant_level %>% select(RT_Right) %>% summarise(mean(RT_Right))),
colour  = scales::hue_pal()(2)[2], size=0.75,  linetype="dashed", alpha=0.75) +
geom_vline(xintercept=as.numeric(participant_level %>% select(CPPonset_LeftTarget) %>% summarise(mean(CPPonset_LeftTarget))),
colour  = scales::hue_pal()(1), size=0.75, alpha=0.75) +
geom_vline(xintercept=as.numeric(participant_level %>% select(CPPonset_RightTarget) %>% summarise(mean(CPPonset_RightTarget))),
colour  = scales::hue_pal()(2)[2], size=0.75, alpha=0.75) +
geom_hline(yintercept=0, alpha = 0.5) +
geom_vline(xintercept=0, alpha = 0.5) + #add black likes at 0 on x and y axis
annotate("text", x = -75, y = 6, label = "[B]", size=6)
png("CPP_and_RT.png", width = 9*600, height = 6*600,  units = "px", res = 600)
source("multiplot.R")
multiplot(p1,p2,layout= matrix(c(1,2,2)))
dev.off()
multiplot(p1,p2,layout= matrix(c(1,2,2)))
png("CPP_and_RT.png", width = 8*600, height = 6*600,  units = "px", res = 600)
source("multiplot.R")
multiplot(p1,p2,layout= matrix(c(1,2,2)))
dev.off()
multiplot(p1,p2,layout= matrix(c(1,2,2)))
p2<-ggplot(plotdata_Stim_locked_CPP, aes(x=Time, y=CPP, color=Hemifield,fill=Hemifield)) +
geom_line(size=1) +
geom_ribbon(aes(ymin=CPP-ci, ymax=CPP+ci), alpha = 0.5, colour=NA) +
coord_cartesian(ylim = c(-0.1, 6),  xlim = c(-100, 900)) +
xlab("Time (ms)") + ylab("CPP Amplitude (uV)") +
theme_bw() +
theme(axis.title.x = element_text(face="bold", size=12),
axis.text.x  = element_text(face="bold", angle=0,  size=12), #element_text(face="bold", angle=0,  size=12),
axis.title.y = element_text(face="bold", size=12),
axis.text.y  = element_text(angle=0, vjust=0.5, size=12),
legend.title = element_text(size=12, face="bold"),
legend.text = element_text(size = 12, face = "bold"),
legend.position= c(0.88,0.88)) + #Move ledgend position
guides(color=FALSE) +
annotation_custom(CPP_scalp,xmin = 100, xmax = 200, ymin = 4.5, ymax = 6.25) + #add the CPP scapl plot
geom_vline(xintercept=as.numeric(participant_level %>% select(RT_Left) %>% summarise(mean(RT_Left))), #add dashed verticle for RT
colour  = scales::hue_pal()(1), size=0.75,  linetype="dashed", alpha=0.75) +
geom_vline(xintercept=as.numeric(participant_level %>% select(RT_Right) %>% summarise(mean(RT_Right))),
colour  = scales::hue_pal()(2)[2], size=0.75,  linetype="dashed", alpha=0.75) +
geom_vline(xintercept=as.numeric(participant_level %>% select(CPPonset_LeftTarget) %>% summarise(mean(CPPonset_LeftTarget))),
colour  = scales::hue_pal()(1), size=0.75, alpha=0.75) +
geom_vline(xintercept=as.numeric(participant_level %>% select(CPPonset_RightTarget) %>% summarise(mean(CPPonset_RightTarget))),
colour  = scales::hue_pal()(2)[2], size=0.75, alpha=0.75) +
geom_hline(yintercept=0, alpha = 0.5) +
geom_vline(xintercept=0, alpha = 0.5) + #add black likes at 0 on x and y axis
annotate("text", x = -75, y = 6, label = "[B]", size=6)
png("CPP_and_RT.png", width = 8*600, height = 6*600,  units = "px", res = 600)
source("multiplot.R")
multiplot(p1,p2,layout= matrix(c(1,2,2)))
dev.off()
multiplot(p1,p2,layout= matrix(c(1,2,2)))
p2<-ggplot(plotdata_Stim_locked_CPP, aes(x=Time, y=CPP, color=Hemifield,fill=Hemifield)) +
geom_line(size=1) +
geom_ribbon(aes(ymin=CPP-ci, ymax=CPP+ci), alpha = 0.5, colour=NA) +
coord_cartesian(ylim = c(-0.1, 6),  xlim = c(-100, 900)) +
xlab("Time (ms)") + ylab("CPP Amplitude (uV)") +
theme_bw() +
theme(axis.title.x = element_text(face="bold", size=12),
axis.text.x  = element_text(face="bold", angle=0,  size=12), #element_text(face="bold", angle=0,  size=12),
axis.title.y = element_text(face="bold", size=12),
axis.text.y  = element_text(angle=0, vjust=0.5, size=12),
legend.title = element_text(size=12, face="bold"),
legend.text = element_text(size = 12, face = "bold"),
legend.position= c(0.88,0.88)) + #Move ledgend position
guides(color=FALSE) +
annotation_custom(CPP_scalp,xmin = 80, xmax = 220, ymin = 4.5, ymax = 6.25) + #add the CPP scapl plot
geom_vline(xintercept=as.numeric(participant_level %>% select(RT_Left) %>% summarise(mean(RT_Left))), #add dashed verticle for RT
colour  = scales::hue_pal()(1), size=0.75,  linetype="dashed", alpha=0.75) +
geom_vline(xintercept=as.numeric(participant_level %>% select(RT_Right) %>% summarise(mean(RT_Right))),
colour  = scales::hue_pal()(2)[2], size=0.75,  linetype="dashed", alpha=0.75) +
geom_vline(xintercept=as.numeric(participant_level %>% select(CPPonset_LeftTarget) %>% summarise(mean(CPPonset_LeftTarget))),
colour  = scales::hue_pal()(1), size=0.75, alpha=0.75) +
geom_vline(xintercept=as.numeric(participant_level %>% select(CPPonset_RightTarget) %>% summarise(mean(CPPonset_RightTarget))),
colour  = scales::hue_pal()(2)[2], size=0.75, alpha=0.75) +
geom_hline(yintercept=0, alpha = 0.5) +
geom_vline(xintercept=0, alpha = 0.5) + #add black likes at 0 on x and y axis
annotate("text", x = -75, y = 6, label = "[B]", size=6)
png("CPP_and_RT.png", width = 8*600, height = 6*600,  units = "px", res = 600)
source("multiplot.R")
multiplot(p1,p2,layout= matrix(c(1,2,2)))
dev.off()
multiplot(p1,p2,layout= matrix(c(1,2,2)))
matrix(c(1,2,2)
)
matrix(c(1,2,2;1,2,2))
? matrix
matrix(c(1,2,3, 11,12,13), nrow = 2, ncol = 3, byrow = TRUE,
dimnames = list(c("row1", "row2"),
c("C.1", "C.2", "C.3")))
ggplot(plotdata_N2, aes(x=Time, y=N2, color=Hemifield,fill=Hemifield, linetype=Hemisphere)) +
geom_line(size=1.4) + geom_ribbon(aes(ymin=N2-ci, ymax=N2+ci), alpha = 0.3, colour=NA) +
geom_hline(yintercept=0, alpha = 0.5) + geom_vline(xintercept=0, alpha = 0.5) +
coord_cartesian(ylim = c(-2.7, 1), xlim = c(-100, 500)) +
xlab("Time (ms)") + ylab("N2 Amplitude (uV)") +
theme(axis.title.x = element_text(face="bold", size=12),
axis.text.x  = element_text(face="bold", angle=0,  size=12)) +
theme(axis.title.y = element_text(face="bold", size=12),
axis.text.y  = element_text(angle=0, vjust=0.5, size=12)) +
theme(legend.title = element_text(size=11, face="bold")) +
theme(legend.text = element_text(size = 11, face = "bold")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
theme(panel.margin = unit(1.5, "lines"))
matrix(c(1,2,3, 11,12,13), nrow = 2, ncol = 3, byrow = TRUE)
matrix(c(1,2,3, 11,12,13), nrow = 2, ncol = 3)
matrix(c(1,2,3, 11,12,13), nrow = 2, ncol = 3)
matrix(c(1,1,3, 11,12,13), nrow = 2, ncol = 3)
matrix(c(1,1,3, 11,12,13), nrow = 3, ncol = 2)
matrix(c(1,1,1, 2,2,3), nrow = 2, ncol = 3)
matrix(c(1,1,1, 2,2,3), nrow = 3, ncol = 2)
multiplot(p1,p2,layout= matrix(c(1,1,1, 2,2,2), nrow = 3, ncol = 2))
p3<-ggplot(plotdata_N2, aes(x=Time, y=N2, color=Hemifield,fill=Hemifield, linetype=Hemisphere)) +
geom_line(size=1.4) + geom_ribbon(aes(ymin=N2-ci, ymax=N2+ci), alpha = 0.3, colour=NA) +
geom_hline(yintercept=0, alpha = 0.5) + geom_vline(xintercept=0, alpha = 0.5) +
coord_cartesian(ylim = c(-2.7, 1), xlim = c(-100, 500)) +
xlab("Time (ms)") + ylab("N2 Amplitude (uV)") +
theme(axis.title.x = element_text(face="bold", size=12),
axis.text.x  = element_text(face="bold", angle=0,  size=12)) +
theme(axis.title.y = element_text(face="bold", size=12),
axis.text.y  = element_text(angle=0, vjust=0.5, size=12)) +
theme(legend.title = element_text(size=11, face="bold")) +
theme(legend.text = element_text(size = 11, face = "bold")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
theme(panel.margin = unit(1.5, "lines"))
matrix(c(1,1,1, 2,2,3), nrow = 3, ncol = 2)
multiplot(p1,p2,p3,layout= matrix(c(1,1,1, 2,2,3), nrow = 3, ncol = 2))
ggplot(plot_data, aes(Time, t_value, colour=Hemifield)) + geom_line(size=1.4) +
geom_hline(yintercept=2, alpha = 0.5,  size=1.4) + geom_hline(yintercept=-2, alpha = 0.5,  size=1.4) + geom_vline(xintercept=0, alpha = 0.5,  size=1.4) +
coord_cartesian(ylim = c(-5, 8), xlim = c(-100, 800)) +
theme(axis.title.x = element_text(face="bold", size=14),
axis.text.x  = element_text(face="bold", angle=0,  size=14)) +
theme(axis.title.y = element_text(face="bold", size=14),
axis.text.y  = element_text(angle=0, vjust=0.5, size=14)) +
theme(plot.title = element_text(face="bold", size=16)) +
theme(strip.text.x = element_text(size = 13))
ggplot(plotdata_Stim_locked_Beta, aes(x=Time, y=Stim_locked_Beta, color=Hemifield,fill=Hemifield)) +
geom_line(size=1.4) + geom_ribbon(aes(ymin=Stim_locked_Beta-ci, ymax=Stim_locked_Beta+ci), alpha = 0.3, colour=NA) +
geom_hline(yintercept=0, alpha = 0.5) + geom_vline(xintercept=0, alpha = 0.5) +
coord_cartesian(ylim = c(-0.1, 0.01),  xlim = c(-100, 800)) +
xlab("Time") + ylab("Beta Power (uV)") +
theme(axis.title.x = element_text(face="bold", size=12),
axis.text.x  = element_text(face="bold", angle=0,  size=12)) +
theme(axis.title.y = element_text(face="bold", size=12),
axis.text.y  = element_text(angle=0, vjust=0.5, size=12)) +
theme(legend.title = element_text(size=11, face="bold")) +
theme(legend.text = element_text(size = 11, face = "bold")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
p4<-ggplot(plotdata_Stim_locked_Beta, aes(x=Time, y=Stim_locked_Beta, color=Hemifield,fill=Hemifield)) +
geom_line(size=1.4) + geom_ribbon(aes(ymin=Stim_locked_Beta-ci, ymax=Stim_locked_Beta+ci), alpha = 0.3, colour=NA) +
geom_hline(yintercept=0, alpha = 0.5) + geom_vline(xintercept=0, alpha = 0.5) +
coord_cartesian(ylim = c(-0.1, 0.01),  xlim = c(-100, 800)) +
xlab("Time") + ylab("Beta Power (uV)") +
theme(axis.title.x = element_text(face="bold", size=12),
axis.text.x  = element_text(face="bold", angle=0,  size=12)) +
theme(axis.title.y = element_text(face="bold", size=12),
axis.text.y  = element_text(angle=0, vjust=0.5, size=12)) +
theme(legend.title = element_text(size=11, face="bold")) +
theme(legend.text = element_text(size = 11, face = "bold")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
layout= matrix(c(1,1,1, 2,2,3)
)
matrix(c(1,1,1, 2,2,3), nrow = 3, ncol = 2)
matrix(c(1,2,1,2,3,4), nrow = 3, ncol = 2)
matrix(c(1,2,3,1,2,4), nrow = 3, ncol = 2)
multiplot(p1,p2,p3,layout= matrix(c(1,2,3,1,2,4), nrow = 3, ncol = 2))
multiplot(p1,p2,p3,p4,layout= matrix(c(1,2,3,1,2,4), nrow = 3, ncol = 2))
ggplot(plotdata_N2, aes(x=Time, y=N2, color=Hemifield,fill=Hemifield, linetype=Hemisphere)) +
geom_line(size=1.4) + geom_ribbon(aes(ymin=N2-ci, ymax=N2+ci), alpha = 0.3, colour=NA) +
geom_hline(yintercept=0, alpha = 0.5) + geom_vline(xintercept=0, alpha = 0.5) +
coord_cartesian(ylim = c(-2.7, 1), xlim = c(-100, 900)) +
xlab("Time (ms)") + ylab("N2 Amplitude (uV)") +
theme(axis.title.x = element_text(face="bold", size=12),
axis.text.x  = element_text(face="bold", angle=0,  size=12)) +
theme(axis.title.y = element_text(face="bold", size=12),
axis.text.y  = element_text(angle=0, vjust=0.5, size=12)) +
theme(legend.title = element_text(size=11, face="bold")) +
theme(legend.text = element_text(size = 11, face = "bold")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
theme(panel.margin = unit(1.5, "lines"))
multiplot(p1,p2,p3,p4,layout= matrix(c(1,2,3,1,2,4), nrow = 3, ncol = 2))
matrix(c(1,2,3,1,2,4), nrow = 3, ncol = 2)
multiplot(p1,p2,p3,p4,layout= matrix(c(1,2,3,1,2,4), nrow = 3, ncol = 2))
multiplot(p3,p4,layout= matrix(c(1,2))
)
multiplot(p1,p2,p3,p4,layout= matrix(c(1,2,3,1,2,4), nrow = 3, ncol = 2))
multiplot(p1+coord_fixed(),p2+coord_fixed(),p3+coord_fixed(),p4+coord_fixed(),layout= matrix(c(1,2,3,1,2,4), nrow = 3, ncol = 2))
? ggsave
multiplot(p3,p4,layout= matrix(c(1,2)))
multiplot(p3,p4,layout= matrix(c(1,2)))
ggsave("mtcars.png")
p5<-multiplot(p3,p4,layout= matrix(c(1,2)))
p5
p5<-multiplot(p3,p4,layout= matrix(c(1,2)))
p5
multiplot(p1,p2,p3,p4,layout= matrix(c(1,2,3,1,2,4), nrow = 3, ncol = 2))
png("CPP_and_RT.png", width = 10*600, height = 6*600,  units = "px", res = 600)
source("multiplot.R")
multiplot(p1,p2,layout= matrix(c(1,2,2)))
dev.off()
multiplot(p1,p2,layout= matrix(c(1,2,2)))
png("CPP_and_RT.png", width = 9*600, height = 5*600,  units = "px", res = 600)
source("multiplot.R")
multiplot(p1,p2,layout= matrix(c(1,2,2)))
dev.off()
multiplot(p1,p2,layout= matrix(c(1,2,2)))
png("CPP_and_RT.png", width = 10*600, height = 6*600,  units = "px", res = 600)
source("multiplot.R")
multiplot(p1,p2,layout= matrix(c(1,2,2)))
dev.off()
multiplot(p1,p2,layout= matrix(c(1,2,2)))
